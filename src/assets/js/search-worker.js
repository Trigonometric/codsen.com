import Fuse from "fuse.js";

// 1. List of items to search in
// prettier-ignore
const searchIndex = [{"url":"/tooling/","postType":"page","title":"Tooling","index":"tooling njk contents"},{"url":"/ranges/","postType":"page","title":"Ranges","index":"invented term just fancy way describe arrays from string index ranges means delete characters replace with case marked by pass empty array will work too that there same indexes gives us flexibility process strings example detergent taps different packages one strip html another remove widow words they report operate source mutated previous operation end merges those processes rendering result approach old mutating over using regexes back top range libraries apply applies amendments described producing new see package push when want gather instead pushing them into can this helper class below automatic merging sorting also checks types acts like safeguard merge after any two vicinity have edge value overlap sort sorts crop crops ensuring goes beyond given along regex takes matches returns which would thing similarly results yield others gladly accept ent decode wrapper market leading entity decoder he js tested hell out code directly dependency stream cherry unit tests were ported invert inverts length above needed because last inverted touch ending within tells natural number iterate iterates already applied following punches hole included replacing what gets iterated sometimes certain operations aren really composable traverse had final outside each gap between fed callback supply inclusive character covered why processing pinged program makes life easier did manually loop chunk finally write alternatives rich harris rollup creator perform controllable manner oriented its produced sourcemaps are aimed browsers best used transfer amendment instructions programs discard some conditionally tweak complex similar generate comparison method equivalent"},{"url":"/trivia/","postType":"page","title":"Trivia","index":"codsen amalgamation code send meaning skill both web email development this website static follows indieweb principles own our data open sourced example won post medium now column rss are twitter bring tooling client work detergent comb that selfdogfooding by way powering multiple nunjucks filters here didn expect became handy believe choosing right tool job matter project pet switch io from vanilla js react redux only practice visitor experience more important websites can still driven consumes dozen external sources without gatsby contentful html css bit plurality moved away github gitlab place"},{"url":"/freebies/","postType":"page","title":"Freebies","index":"tbc"},{"url":"/os/ranges-merge/","postType":"package","title":"ranges-merge","index":"quick take after sorting any two ranges vicinity have same edge value like below merge them overlap too back top api mergeranges arrofranges opts other words this library gives function must feed array into its first argument also wish can second plain object bracket means optional returns new one more range arrays original input mutated type obligatory description yes zero meaning natural number elements each options see key default explanation boolean supply here will called given which percentage complete that moment values from finally main return result by touch they are joined set option stop handy when reporting separate issues place case want copy paste somewhere consider example notice arrow imagine instead could sit worker report progress then ping last whatever give with done far grab above your merging sorted pairs starting end merged becomes challenge what add third element saying replace characters string index something else let customise behaviour mode mergetype clashing insert always concatenated clash indexes latter overrides former aspects modes messed piece code say our imaginary cleaning program detected unencoded ampersand position malformed where duplicated wise look discard setting come except resolved deleting left keeping right order how got algorithm both vs came clashed wiping"},{"url":"/os/js-row-num-cli/","postType":"package","title":"js-row-num-cli","index":"use once installed call typing your terminal like this specify glob pointing some files too long can also type wired that alternative back top quick take updates each from because row re using are example put under flag specifying paths ⚡⚡⚡⚡⚡⚡⚡ what does first depends did path will process file expand into list didn just typed current folder where called look order src main js cli index picks statements replace chunk uninterrupted sequence numbers with number sits exampe there default padding three characters override see optional flags table below help troubleshoot code these days rollup builds standard having source es modules unit tests build types applications esm same umd minified browsers unpkg com common transpiled suitable older platforms now remove comments automatically when producing production during development skip removal way get goodness risk they spill api globally won pass any pattern patterns following priority globs catch folders specified them optionally options which match lets set statement would added still change console log function name update multiple command line have few rules want values certain value good bad escaping double quotes escape left slash nifty setup idea alias piggyback run often processed without hassle"},{"url":"/os/emlint/","postType":"package","title":"emlint","index":"notice emlint currently being developed please come back later"},{"url":"/os/ast-delete-object/","postType":"package","title":"ast-delete-object","index":"quick take sometimes want look certain key value pair nested objects found delete whole parent object back top api input argument type obligatory description whatever yes ast tree array can deeply pairs that should used match plain boolean ooo optional options by way arguments are mutated any default supplied its keys were target will deleted now there could have been extra set both keysets well values when active empty one which would get med string other might different matching strictly yet same output this library return thing with relevant elements search strict require exactly use example above because ignored unrecognised deal they usually lots white space often many contains only spaces tabs line breaks pretend those containing don exist deletion more aggressive regarding notice how blank catches contain simple result mode non strings hungrily whitespace contained character matched had since missing third didn even matter enough here real life story parser parse some html then from trees email comb deep arrays wanted tag couldn find does came later stopped parsing treating code increased speed processing magnitudes what previously took minute takes milliseconds"},{"url":"/os/array-of-arrays-into-ast/","postType":"package","title":"array-of-arrays-into-ast","index":"what does consumes array arrays produces trie like ast from them input output this library piece one experimental code generator ours back top api generateast opts argument type obligatory description zero more yes source data put into plain object optional options see its below key default boolean skip duplicates here are defaults place copying when unused can also passed value generate with settings setting will active duplicate paths won created now happens turn notice how entries each branch were generally don reason why want there ever need principles every have inside that means tip continues simples compared vs libraries produce manage structures example datastructures js particular case problem structure abstracted behind access directly traversing nested tree objects would limit methods however recursively traverse node look down around where comes doesn abstract producing get which further process any way using vast ocean processing"},{"url":"/os/array-includes-with-glob/","postType":"package","title":"array-includes-with-glob","index":"how works lodash can tell does array contain given string among its elements this library supercharged version letting put wildcards wildcard means zero more unicode characters also fancy things like middle multiple will tolerate non values source skip those astral character friendly supports including emoji doesn mutate input query request that any default behaviour optional setting should found yield result see examples below back top api argument type obligatory description strings yes what look one plain object options none arguments mutated key value when first second have match performed two ways return true are only within practical usage very useful tackling objects example merge advanced certain keys upon technically may globs program processes above need run check through covered by would get merged keep their output boolean returns least else conditions throw error inputs missing wrong empty always"},{"url":"/os/regex-empty-conditional-comments/","postType":"package","title":"regex-empty-conditional-comments","index":"usage back top"},{"url":"/os/js-row-num/","postType":"package","title":"js-row-num","index":"idea when create libraries add new features them look bugs rely statements every one our there rollup plugins set plugin strip cleanup who remove comments from built files that later get published folder contents this means can commit source with now troubleshooting code are two essential pieces information what happened where part statement row number like need automated tool update numbers because will many rows enough line below offset library updates js file api other tools consumes string hopefully some returns also browser web apps node cli applications tap application updating work back top usage let say want put front each automatically notice how first within got updated simple out options everything beyond st argument ignored optional object key type its value default description zero natural anything falsey sets much digits padded integer something have console log already extracted know pass here multiple lines won recognised assume process by boolean enabled instead program return result ranges notation array more strings after met chunks replaced unless letter normally expect whole given give activate flag place rules only either case precedes agree should letters precede quotes doesn matter single double backticks long opening quote matches closing non characters digit touched lump second onwards eol does support three types see unit tests under group don use your function name above used fourth padding pad perform replacement composable amendment instructions they arrays containing indexes example range instruction delete which would otherwise fall into replace note deleted using character upon request final setting disable keywords nothing cases empty kick input processed sometimes programs processing come just extract option comes"},{"url":"/os/email-homey/","postType":"package","title":"email-homey","index":"use once installed call root your templates projects what does helps generate homepage with list email will expect that located within certain folder specifically scan subfolder names path give like example above go inside look copy into overwriting such file already exists replace word maintaining correct indentation this need able pull driven by vue js html script can query hard drive find node array table back top"},{"url":"/os/csv-sort-cli/","postType":"package","title":"csv-sort-cli","index":"call file appending your name with without flag like this back top omit will let pick csv offer list files current folder choose from can even try installing use what does exactly sorts rows correspond double entry bookkeeping principles sometimes internet banking have wrong order especially when entries are same date library helps sort correct bonus trim empty columns mention our custom parser used here ensure that cell contents trimmed there between content also accepts any commas wrapped quotes"},{"url":"/os/html-table-patcher/","postType":"package","title":"html-table-patcher","index":"idea very often templating languages php email service providers back end code inserted between html table tags open such browser that will appear wrong places because try patch incorrectly this library patches correct renders cells patched meant production by any means visual display only takes string hopefully some outputs tool rather api feature other tools plugins top package exports plain objects with three keys first one value which main function second defaults object third version taken straight from example can import whole single variable call its methods patcher two input arguments returns zero more characters length argument key type obligatory description yes optional options see below put under per here default empty whatever every newly added td inline tag boolean should have contents centered via attribute algorithm uses home brewn ingredients parse using then traverse record what needs amended finally apply changes go gui tap when developing features handy able test multiple variations quickly unit tests slow edit plus output runner perfect set rudimentary front run server root running cli terminal after started navigate folder serve wired consume live umd build new"},{"url":"/os/string-match-left-right/","postType":"package","title":"string-match-left-right","index":"api input there are four methods have same least one given substrings match what left including character index right argument type obligatory description string yes source work natural number incl zero where start looking this may used other two array strings should look particular side aforementioned anything found will returned especially handy when here pass way know which matched plain object optional options see below back top output returns boolean value that then first from elements key default case sensitive insensitive function feed called with remainder depends method others accordingly being result callback joined using logical operator calculate final use mainly check whitespace set can before checked starts basically means substring begin end more each long similarly like remove any characters provide example useful checking tag names without closing slash missing falsey arguments error instantly cause words bypass errors id defaults place ready copying sanitized by keys wrong types add unrecognized often need only within also perform checks outside traversing want attribute traverse backwards catch equals enough because next space algorithm terms trims length how apply callbacks cb stands receive three depending second argment whole begins ends might come than third follows actions content notice element very important matching forget return truthy even would both comparison yield imagine forgot something thing inline relying sometimes beyond equal level run regex against let equation judge sine empty don thrown normally receives gave instead order st nd slice rd strip html library known name opening bracket now allow dirty code cases after some browser patch able detect easy performed trimmed into such scenarios rare strict tags locate trimming account slashes beginning ending since further eol nothing currently limited avoid interpreted real letters arrow javascript functions class citizens raw values still retrieve yet correctly consider letter while towards instruct skip unicode somewhat supported covers emoji comprise longer contains loops iterating splitting grapheme later performing operations think approach most performant choose less lines"},{"url":"/os/string-uglify/","postType":"package","title":"string-uglify","index":"idea this library takes array strings uglifies them into something like deterministic algorithm means that same input always results output our nearly because many class names compete shortened single character depending list slot may available when default two long clash third appended with less probability happening technically speaking want uglify such way replacing half classes uglifying again veteran values would stay practically can heavily edit your html unlikely there will reported git changes outside edited code areas example let minify css made nato phonetic alphabet being one then create another leave only fill other words both uglified result arrays consistently minified determinism back top features its api friendly errors are thrown wrong inputs won give empty fine put dots hashes don minifying id might omit dot hash reference does have contain unique entries just inefficient duplicates should aim avoid usage get three things uglifyarr returns copy given each string anything thing instantly returned more return type non those feed without see above uglifybyid clones element by requested arguments natural number index from position efficient called times time processes whole using gives instead assign variable query need version outputs semver straight key value uglification vs minification some people use term interchangeably different rename shorter case remove white space sometimes last semicolon integrated tool consider crush"},{"url":"/os/arrayiffy-if-string/","postType":"package","title":"arrayiffy-if-string","index":"idea non empty string put into array return anything else just main purpose prepare input argument options objects check out back top"},{"url":"/os/html-entities-not-email-friendly/","postType":"package","title":"html-entities-not-email-friendly","index":"quick take unlike web pages email templates are sent over smtp need html encoded encoding can done three ways decimal hexadecimal named forms entities memorised recognised more easily than numeric ones when check template text informative somebody mistakenly put would tell stands out instantly only problem supported well across clients particular windows desktop outlooks this package tells which exactly widely what convert them program exports few different lists plain object key value pairs like total keys set entity names correct letter case size alphabetically sorted lowercase back top point decode example among see means friendly should noticed ampersands semicolons missing values they re obligatory code add yourself sets awesome because fast import must use methods etc array also idea that have suspect its might messed match against now something found actions matching aiming with exact your their give guidance how long short keep mind here does count ampersand semicolon length characters api five name type purpose raw decoded unsorted natural number string shortest currently hardcoded longest practice allows detergent automatically switch between prioritising acccording competitor acid character converter uses mention eoa ignores invisible liability"},{"url":"/os/tap-parse-string-to-object/","postType":"package","title":"tap-parse-string-to-object","index":"idea this library basic raw tap parser string object aimed parse test output saved into files using existing parsers like are operations terminal they consume piped there return streams program similar except that works synchronously asynchronously depending what give will plain stream promise both cases look fancy won names extract totals asserts suites going use ourselves compile stats our unit tests back top synchronous example out asynchronous api depends input provide receive whole with can big around mb assertions reading processing such file would cripple even core intel laptop same easily processed however keep alternative peoples convenience maybe somebody just wants play doesn want guest result given put inputs yielding described above algorithm wrote own little essence counts lines when trimmed start ok condition those consecutive located after line which contains subtest each opening curlie brace bumps suite count exception chunks skip everything between three dashes dots"},{"url":"/os/string-remove-thousand-separators/","postType":"package","title":"string-remove-thousand-separators","index":"use purpose this library detects removes thousand separators from numeric strings main consumer will which deals with exported internet banking csv files double entry accounting format string must that contain any letters other unrelated characters can empty space though automatically trimmed back top examples api remsep str opts first argument input error second optional however present plain object options defaults key type obligatory default description boolean should remove swiss style russian pad one decimal place numbers zero convert separator commas into dots"},{"url":"/os/string-convert-indexes/","postType":"package","title":"string-convert-indexes","index":"idea are talking about indexes numbers used example some libraries use js native indexing where emoji counts two characters based character count one this converter that converts between systems highlights efficient algorithm input string traversed only once regexes potential security issues can number numeric nested tree them library will convert any natural set strings fine just like untranspiled es modules build wired key webpack rollup recognise consume main export transpiled have with back top usage api methods nativetounicode str opts let say unicode unicodetonative both same argument type obligatory description yes which want perform search whatever anything from arrays incl zero shape compiled replaced converted value plain object options see its below separate table optional default boolean index covered by conversion reliably don know how many astral lead turn error throwing such cases make package leave those uncovered alone here defaults place practical created quite few processing using while more universal"},{"url":"/os/string-apostrophes/","postType":"package","title":"string-apostrophes","index":"quick take know straight apostrophes are typographically correct should with right single quote instead apostrophe this program converts cases double plus primes sources used rules logic unit tests oxford grammar punctuation nd ed isbn butterick practical typography chapter back top api when consume package two functions exported input function its following argument key value type obligatory description string yes which will process plain object put options here example default boolean html encode characters killswitch does nothing output returned processed ranges applied array zero more arrays that were gathered produce gave result settings would how tell natural number index where character need start given end override present provide called meaning much skip next opts offsetby offset needed bypass already fixed happens nested quotes fix many one go further processing otherwise those get multiple times bumped using callback fashion inner bumps outer consider escaped there various other have sentence just different represent them values going code use each symbol by instruct from particular above evaluates surroundings normal suggests replacement practice uses returns representing what needs done means replace chunk can words apply compared competitors npm replaces dom web page script regex based encoded content upon request allows any part commonjs es modules builds umd published available unpkg jsdelivr serves languages besides english out changes capabilities bundled because browser only possible targets consuming programs might even consumers electron whatever best write standalone apps like core work original"},{"url":"/os/chlu-cli/","postType":"package","title":"chlu-cli","index":"summer update long time passed since created this program our workflow evolved don use any more npm packages live monorepo gitlab deployment via ci automates versioning changelog updates re saying because normally programs following eat what cook principle indieweb how works cli app once installed call root folder where your sits default setting just silently does job checks fixes want some output with flag will say ok each writes successfully chlu both bitbucket github repositories stands ch ange og pdate should note that changelogs follow rules given by now tedious part diff links takes care them also have dates iso format between entries consistent title example these are main things updating back top features see above wraps version link brackets creates url footer adds missing intelligent enough detect existing their order repo data read create convert either based repository user account name set correctly per project from chosen wisely there available previous entry used real practice often many patch releases hence word notable changes merely calculated usually minor major would get caught skew picture released year month date try couple well known projects messed guinea pigs unit tests nifty setup idea unnecessary run manually mention might even forget suggest add one aliases edit bash config whatever using shell file contain runs doctoc exists then check lastly means always readme committed correct updated state dependencies checked"},{"url":"/os/ast-loose-compare/","postType":"package","title":"ast-loose-compare","index":"purpose find out does object array string nested mix subset equal another input any plain tree thereof that contains only space characters tabs line breaks considered containing empty this library will encounter two things contain report them example these are second argument can first one notice values different type yet both main compare parsed html css trees when deleting ast branches dependency delete which elements from objects back top difference there similarly named between following check something exactly query item with search same superset unlike ismatch reported non act except lodash anything other arrays here just differences partial comparisons match source against value respectively documentation positively matches everything bad comparing doesn although arguments they want comparison stricter ways towards equation alternative programs deeply strings output normally would deed arays hence plus accept adapt sources combinations necessary support whatever api within returns otherwise mismatch cases where inputs missing key their differing more examples"},{"url":"/os/lerna-link-dep/","postType":"package","title":"lerna-link-dep","index":"quick take runs whole chain actions redundantly validating packages calling internet want within our monorepo that what this cli does example symlink created root object values equal node_modules detergent pointing expect updated are linked properly devdeps can set via flag back top supports your package from above symlinks will put one level deeper instead each entry json straight file ours following its git cloned wanted link another two would both same ps wonder happens normal main bin keys still work sets against according lerna documentation together dependencies other just by way people complain about issues board here well now those days gone have simple dependency linker last finest ingredients only ~dependencies~ used promise based run shell processes part bootstrap remind users currently installed outdated"},{"url":"/os/util-nonempty/","postType":"package","title":"util-nonempty","index":"quick take utility function able detect input empty want check non emptiness complex nested trees objects arrays strings like parsed html ast need library which can recursively traverse that there are two options strict see your definition everything string this includes tabs spaces line breaks example letters contains only space back top api anything boolean out"},{"url":"/os/lerna-clean-changelogs/","postType":"package","title":"lerna-clean-changelogs","index":"idea this string out function which cleans strings hopefully are changelog file contents could say low level api other cleaning tools websites cli apps whatnot want ready use tool consider sibling application package driven by very lerna clean changelogs install globally back top input exports cleanchangelogs str words takes one argument key value type obligatory description yes zero more characters first error will thrown empty fine result library deliberately decoupled from read write operations because might put web drive using whatever most universal actually export plain object where under also information keys such version however same output returned contains following name present currently example gave just cleaned purpose performs steps removes bump only entries that generates there can many reasons these deleted along with their headings diff links change into need those don work bitbucket generally noise remove turn them exception main heading exampe notice how second hash character added beside link being removed replaces two lines line itself leaves excessive whitespace bonus spaces tabs etc they re hard spot useless existing pre dashes note list items updated match notation asterisks"},{"url":"/os/ranges-apply/","postType":"package","title":"ranges-apply","index":"quick take applies amendments described by ranges producing new string back top api stringreplaceslicesarray inputstring rangesarray progressfn other words this library gives function must feed above into its first argument array also wish can third bracket means optional returns with requested slices deleted replaced st type want work nd zero more arrays containing range replacement alternatively given that alternative output classes push example psst check out which helps manage methods add retrieve cases where overlap maintain order index always goes from smallest largest everywhere rd input used worker setups user wants report progress job passed will called natural number percentage done far algorithm plan simple your slicing accordingly main thing unit tests edge case scenarios fancy features upcoming like using character enumeration counting emoji one our originally part email comb traversed html compiled things delete replace later go performance important good idea spot because each deletion slowed down process instead then did whole once appears fastest way re going use processing libraries who without parsing"},{"url":"/os/ast-monkey-util/","postType":"package","title":"ast-monkey-util","index":"idea both use notation this utility program contains helper functions traverse paths conceptually identify node need then get its path from same callbacks amend that using set delete back top api takes string increments last digit decrements goes one level discarding two parts practically think always outputs array zero more plain objects each representing tag chunk text comment since root element those are digits ast child nodes nested within key value following html would yield many keys omitted thus with above first going mean splitting by dot into elements joining used based marked object want fourth there drawback can numeric strings advantage children now separated split quickly process unlike js square brackets"},{"url":"/os/object-boolean-combinations/","postType":"package","title":"object-boolean-combinations","index":"what does consumes plain object takes its keys values don matter produces array with every possible combination each key boolean value have get objects resulting could generate efficiency re generating instead works same logic less space ps observe how input had sometimes want combinations might pin certain constant across those cases use overrides see below back top api argument type obligatory description yes from which should reference this will used overriding section override example settings only reduces above are pinned thus reducing amount by power two essentially halving count twice notice having variations practice perform specific tests detergent js let say testing encode entities correctly that case need arrays filled first other second rest again here unit test uses create then iterate through them trivia our npm package day drives enables us hell out assertions vast majority generated programmatically guarantees single toggle doesn accidentally affect bugs can hide among"},{"url":"/os/ast-is-empty/","postType":"package","title":"ast-is-empty","index":"rationale imagine that have nested array which contains plain objects arrays strings huge tree this library can tell consists only empty things by mean with keys equal zero length would includes tabs line breaks spaces mix thereof these are example practically speaking when work ast mentioned noise probably doesn need processed needs removed altogether functions considered will return encounters one anywhere within same inputs both yield back top api default function exported its anything boolean out also inappropriate given don belong"},{"url":"/os/color-shorthand-hex-to-six-digit/","postType":"package","title":"color-shorthand-hex-to-six-digit","index":"purpose email newsletters use lot styling using html attributes example know there alternative way write color codes hex shorthand certain contemporary consumption software doesn accept colour what means have ensure your templates only full length some tooling libraries that work with sass shorten best practice web development need tool library which could convert any from input array plain object string into notation this takes strings objects other arrays nested combination thereof containing anything values including once received traverses converts found abc aabbcc additionally letters are converted lowercase back top examples usage gulp environment don plugin can simply whenever get control final stream especially scss variables tap right after importing hope misbehaving one place coded recursive pass matter how deep tangled character will within nothing fix behaves well returning whatever given feel free assign sources output api argument name workable function returned intact acts like safety valve when wrong through converting them ps case mutated package clone its copy important teenage turtle mutations here dependencies ingredients were used regex by @tunnckocore"},{"url":"/os/string-character-is-astral-surrogate/","postType":"package","title":"string-character-is-astral-surrogate","index":"idea when traverse string most efficient way index by using loop might stumble upon astral character low high surrogates this library helps identify them other seems able that example regex can tell does contain characters given comprise two won help separately need cover cases such without second counterpart itself very simple functions ishighsurrogate char islowsurrogate reads first unicode code point evaluates its there are more they ignored theory surrogate goes source back top usage api same str input zero where will evaluated output boolean empty undefined returned anything than type error thrown consists everything beyond return false make life easier traversing check next doesn exist far ness concerned re fine yields otherwise have before feeding into tedious level picky"},{"url":"/os/email-comb/","postType":"package","title":"email-comb","index":"idea this library removes unused css from html without parsing strengths aimed email development works everywhere where contained within same file external stylesheets accepts mixed with other templating programming languages broken incomplete invalid xhtml code both classes id optionally uglifies class names algorithm will cope style tags inside tag multiple can strip comments recognises outlook conditional specific features like removing empty attempts fix some issues example remove space doctype comb defaults version package json whitelist module backend heads tails red main box uglify false removehtmlcomments true removecsscomments donotremovehtmlcommentswhoseopeningtagcontains endif reportprogressfunc null reportprogressfuncfrom reportprogressfuncto log result countbeforecleaning countaftercleaning allinhead allinbody deletedfromhead deletedfrombody used opts externalclass hi data firstname db pt switch string price purchaseprice work fine static wired campaign non tool skips doesn understand back top"},{"url":"/os/json-comb-core/","postType":"package","title":"json-comb-core","index":"idea imagine have set json files helps maintain manage normalise those each object should same key missing keys added nested array there are plain objects within its siblings sake completeness let sort resulting too that need tools extract keyset enforce alert when unique can won yet some insurance would nice get our contain none other find unused jsons might normalised certain placeholder values every single means particular probably deleted back top getkeyset input opts this function produces reference according which consumes promises where promise resolve into once first start coalesces them one by schema technically speaking superset two rules level between different value gets filled with only merging done premise retain much information after possible argument type obligatory description resolving yes usually file contents optional options being synchronous see below api ps normal full contains default any placeholders way minimise footprint make easy later fill from written straight because already equal output used really want suddenly switch async example parsed extracts keeping customising reads normalises adding what asyc version method zero more strings paths don necessarily sometimes falsey they such cases put here notation path boolean using turn areas template defaults kick defuse your false ultimate mode will kill incoming result clone null returns practically handy tame least ensure new data mapping could validated through check going catch rogue advanced tells throughout whole customise via useful identify reduce size also help misspelt mark string turned anything name piece reported even leading either work arrays both sets complex sorts matter how deeply sorted does mutate fine pass js etc whatever copy created otherwise untouched returned containing something else thing difference normalising real schemas simple terms their types re concerned particularly about existence got match choose separate email content templates add field normally informed maybe pair across very anyway consistence normalisation process making bunch performing read internally algorithm knows however"},{"url":"/os/string-remove-widows/","postType":"package","title":"string-remove-widows","index":"idea this library takes string removes widow words by replacing last space paragraph with non breaking also optionally can replace spaces front dashes between two parts uk postcodes back top features just adds want word prevention measures tackles both paragraphs single lines recognises existing found skips operation option encode html css js strings put raw does mangle line endings mac old style windows customisable minimum amount per trigger removal used different stages workflow before encoding after replaces kinds within skip content templating tags example nunjucks presets are given jinja liquid hexo hugo api program out function decoupled from dom web pages ui cli terminal file system build those delivers three builds umd websites commonjs node applications es modules modern evergreen browsers too usage when get things which work plain object default options semver like brought straight input its following argument key value type obligatory description yes will process here optional boolean nbsp locations inserted encoded particular language choose enabled every whitespace replaced natural number disables feature falsey thing count character array zero more list languages whose heads tails recognised skipped pinged each percentage done first normally reports percentages starting set custom arrays know where provide index ranges one place case copy paste somewhere output returns pick values returned processed calculated produce see format below decoding performed how could look about text ends inject via pseudo attributes might prepared pasted into json allows customise target chosen analogue javascript minimal application would very often already contains literals snippet intend either say customer john don name run piece middle that comes chunks start ignoring stop manually template widest support once endraw opts tagranges sometimes contain didn go far code full tag recognition such duplicate libraries namely accepts known fact any black spots compared competition npm add remove hyphens prepare types threshold progress reporting worker apps what location necessarily have browser live page licence mit isc means core coupled network other unrelated operations makes easier test create many our competitor processing functions been end people who need use power these manipulation files piped streams express rest endpoint server serverless lambda aws electron desktop"},{"url":"/os/helga/","postType":"package","title":"helga","index":"idea this package will api universal code editor helper"},{"url":"/os/html-img-alt/","postType":"package","title":"html-img-alt","index":"idea this library takes care attributes also wrongly called alt tags image html attribute missing any tag will add empty one present run its contents through string unfancy decode entities recursively case multiple encoding applied replace fancy characters with their simpler equivalents within ascii range example single curly quotes are changed into apostrophes includes dashes sorts double non breaking spaces regular remove them content pair normalise white space leaving between before closing slash xhtml bracket can turn by default trimmed unfancie replaced minuses that keep simple old email consumption software make easier qa works fine both doesn touch slashes use separate enforcing removing from singleton main usp does parse never error because dirty code might throw wrong input type something back top api out pass optional options object defaults key obligatory description boolean each processed summer update our today understanding should enforced via linter during coding think web development consumer program detergent evolved greatly since two reasons stop us using package performance other tools surely scanerless way process another round processing dry perf taxing reportability nowadays done ranges composable records where don mutate more than once whole opens many opportunities next generation apps js packages allow io app show only toggles applicable current processes text even reports which would difference given ui uses info hide those applications re talking about"},{"url":"/os/object-flatten-referencing/","postType":"package","title":"object-flatten-referencing","index":"idea sometimes need make one nested object look like another type wise example got key whose value array have its string this library does such flattening back top api ofr plainobject referenceobject options returns new plain flattened according your supplied reference st argument obligatory first input which want flatten nd what rd optional third default description prepend each result simply other encountered append strings empty won anything keys that match given here applies child nodes well also them their used prevent mangling containing data storage can put wildcards zero more characters precise cousin exact path ignore remember after values arrays root equal take th element from second index would ignored boolean when objects are converted into separated by line break controls use html xhtml current already contains don wrap double wrapping variables set mapping various notations nunjucks some marked with obviously they get recognised whole wrapped let say state system variable heads tails turned joined between turn function completely using apply any these naturally either integer skip throw should merge handy email templates where statements hardcoded inside merging produce row contents will checked contain enforcestrictkeyset true name voilà"},{"url":"/os/json-comb/","postType":"package","title":"json-comb","index":"use once installed call terminal with list file folder paths using globs example back top api flags short long description normalise files given set gnore they contain only placeholder values abs instead default spaces json indentation shows ersion your similar this elp"},{"url":"/os/ast-deep-contains/","postType":"package","title":"ast-deep-contains","index":"idea this fancy assertion match arrays objects where order doesn matter source might have extra keys imagine taken from matched are wrong contain only subset notice how above don bother with values well also note that key structure very similar yet because rules were raised such way ava exact missing object array would issue tap set still able detect two solution package will try which most then raise errors matching passed your chosen functions likely back top example checking here reduced based tests reported more than what compared throughout time when improving tokenizer surely add even new should affect main using nuisance update unit each after improvement done added contents random our linter pluggable rule plugin program architecture observer patten function emlint extending node class means nature somewhat undetermined want check correct proposed string fixing index ranges fix input same yard dog cat care about pets error long one happy days behold flags backslashes void html tag first backslash deleted second turned into normal slash elements plus there superset re does report information welcomed ignored cause api deepcontains tree cb errcb opts other words takes arguments argument type obligatory description reference ast can yes nested thereof being checked called pairs path think see below exist callback message plain optional containing settings options default boolean during traversal containers existence traversed further won pinged stop doing strict defaults place need copy consider these monkey test context paths get let repeat setting just they equal either output used exclusively through callbacks those job return anything"},{"url":"/os/generate-atomic-css-cli/","postType":"package","title":"generate-atomic-css-cli","index":"use once installed call typing your terminal like this how works place special placeholders config heads tails then also content will read from between expanded into multiple lines requested result placed instead existing means dynamic value default can customise range appending pipes end line yields see are inclusive values one two mean cli generate update any file html css scss whatever just put job done usually within comments block ⚡⚡⚡⚡⚡⚡⚡ back top"},{"url":"/os/ranges-regex/","postType":"package","title":"ranges-regex","index":"quick take takes string matches given regex returns ranges which would same thing similarly results case will yield merge others gladly accept back top api rareg regexp str replacement other words function three input arguments third one optional marked with brackets argument type obligatory description regular expression yes provide apply onto upon match want add every finding values put here output array zero more arrays called where each consists two natural number indexes this package does mutate its inputs types are incorrect absent library error examples nothing find notice can use features regexes global insensitive flags ps careful signify intention omit by setting valid value ecosystem used kill any present insertion example says form second disregard that content defuse them good"},{"url":"/os/ranges-invert/","postType":"package","title":"ranges-invert","index":"quick take inverts ranges source string length above example needed because last inverted range will touch ending back top api rangesinvert arr strlen opts input argument type obligatory description array zero more arrays yes provide invert have sorted merged integer number algorithm needs know reference calculate slice index plain object optional options go here output called where each consists two natural indexes this package does mutate instead creates returns new with key default boolean set true must only elements otherwise error thrown being would throw well element checks performed handy cut corners perf reasons when are clean"},{"url":"/os/chlu/","postType":"package","title":"chlu","index":"summer update long time passed since created this program our workflow evolved don use any more npm packages live monorepo gitlab deployment via ci automates versioning changelog updates re saying because normally programs following eat what cook principle indieweb does main features see above wraps version with link brackets creates diff url footer adds missing links intelligent enough detect existing their order repo data successfully read will create convert either bitbucket github based repository changelogs user account name set correctly per project from chosen wisely there available previous entry used real practice often are many patch releases between entries hence word title notable changes merely calculated usually minor major would get caught skew picture released dates iso format year month date try them couple well known projects messed guinea pigs unit tests back top api input chlu changelogcontents gittags packagejsoncontents other words string out function argument type obligatory description yes contents plain object git calculate package json retrieve current output returns processed"},{"url":"/os/object-no-new-keys/","postType":"package","title":"object-no-new-keys","index":"quick take check does given plain object have any keys present reference returns array zero more paths notation example can used look rogue email template content json files back top api nnk input opts other words function which takes two obligatory arguments third optional argument key value type description normally whatever case results will empty yes what work upon options output each element exist defaults default integer number choose mode see below modes this library strict comparing having assumptions about assuming that normalised by mean arrays children those objects same these mainly concern when both fewer elements there nothing compare first report are second anticipate get thing within should means only one algorithm identify always need give people chance use well maybe somebody find useful works with too competition could try missing deep won your inputs posterity quite wise run against flattened stringified schemas however support easy short cases parsed html ast higher end"},{"url":"/os/eslint-plugin-row-num/","postType":"package","title":"eslint-plugin-row-num","index":"setup first make sure itself installed among dev dependencies below means dependency opposed normal quick refresher when publish npm package somebody installs its don get they your that point separating both are program testing install them via flag back top some basics then need configure eslint use plugin know pluggable which reason why won over predecessors jslint jshint runs only rules asked warning levels asking configuration file have config yet can nip from another project tweak initiation script mind configs dot files hidden by system best practice visible now example following rule row set correct num comes report findings error level instructions add plugins section here real notice key reciting documentation different settings turn warn doesn affect exit code triggered put number without quotes string with same thing"},{"url":"/os/string-left-right/","postType":"package","title":"string-left-right","index":"whole idea trivial check something left right given index string that done what first non whitespace character either side need use loops trim functions calculate position also consider cases where there are such characters this program about value lookup helper back top usage api both exported have same str idx input argument optional second marked by brackets above starting look then report absence return determinator truthy trimmed must length otherwise these allow locate example output natural number pointing nearest ends further chompleft chompright two jump over certain repeated possibly spaced out with imagine located dot case lets text opts char can pass plain object options third omit modes before match leave single space possible stop alone aggressively chomp except newlines cr lf including works way just towards leftseq rightseq matches order particular disregarding tomatch square mean them type obligatory description yes work upon zero which start looking see below its sequence th put many want now gaps re reports any gap ranges encountered indexes leftmost rightmost leftstopatnewlines rightstopatnewlines besides they line break ps while mac ending backwards slash counts one more complex lookups matching"},{"url":"/os/html-all-known-attributes/","postType":"package","title":"html-all-known-attributes","index":"idea this package aims have most excessive list legit attribute names that can put into html currently includes deprecated attributes microsoft proprietary ones email templates use like other probably never seen before back top api exports plain object with single key its value set strings known humanity example why array json because performance reasons previously ed exported now export hardcoded size evaluation speed faster according our built perf tests see folder root each monorepo"},{"url":"/os/array-group-str-omit-num-char/","postType":"package","title":"array-group-str-omit-num-char","index":"idea take array strings group those which differ only by certain number example consider this atomic css class names coming from some report output object key real life could have would shorter go there were let say other groups like npm library case producing notice replaced with wildcard because constant that grouped feature retaining digits reason why got into hassle see quickest alternative gung ho algorithm replace filter unique values lost need back top api groupstr sourcearray opts words variable imported whatever function consumes two input arguments argument type obligatory description yes zero more plain optional options its below way none are mutated empty will give non least one string inside yield put keys they count integer default what use mark characters boolean contents deduped cost performance re sure your set here defaults place copying explicitly refusal custom can also passed value"},{"url":"/os/check-types-mini/","postType":"package","title":"check-types-mini","index":"quick take saves time options object validation expense your program perf back top idea imagine have library where let users set which comes one input arguments here challenge how check throw errors easily when wrong things answer this features use default enforce types supplement fully customise via simple schema error messages that show source even though threw them example typical generated by point save spent coding these checks debugging consumers api they try wrongly every will need some type user tinker with only drawback affect performance why many apps don validate values especially boolean ones checktypes obj ref opts calling its function assign anything good outcome nothing happens bad outcode thrown technically speaking main job are using can customised argument obligatory description plain yes after customisation used compare optional go keys see below key array string empty instructs skip any specified put strings given path notation style within similar thing above unique because simply names appear multiple places whereas paths value elements same reference want ignore certain pass must does arrays each overriding allows more precision enforcing message like include name parent numeric id variable called matter much nicer keep references consistent documentation defaults place common pattern define later plus enough allow provide matching alternatively just stick there allowed cloned onto from call mismatch sometimes accept either those somebody sneaks cases won anymore blacklist objects apply add into were new major version ast delete had update unit tests too previously settings change noticed missed their booleans ed alarm being raised then came match would end wise feel free turn flag complex than single say what enter particular case insensitive come detect chai meaning literal else other usual also specific subtypes handy doesn validated purpose please make typos first aimed npm package uses became aware js started remove strict level best friend needs help deep overkill unless care about"},{"url":"/os/string-find-heads-tails/","postType":"package","title":"string-find-heads-tails","index":"quick take imagine templating scenario have string want put value somewhere will marked by special markers nunjucks use salesforce mailchimp there are many languages specific names distinguish two like opening marker closing don exist invented term heads tails this program finds out where located given back top purpose used json pre processing replacing dumb search being currently context different programming even proprietary notations such email service providers mark variable example language would then among others java jsp oracle responsys esp ex edialog ebay enterprise zeta interactive library enables build tools which process code starts with searching variables help here scanerless parser arbitrary few rules each finding must sequence when one found new findings accepted into results until same goes opposite way both can supplied either single array strings prioritised their order api strfindheadstails str fromindex important index based native javascript indexing astral character length counted wish convert system unicode count method indexes whole nested output mention number input argument type obligatory description yes perform more first half set second plain object optional options see its below ps arguments mutated key default natural zero start later only from certain nd boolean anything wrong detected error thrown precede conescutive turn functionality turning automatically sets that won equal setting does concern types allow processed throwing feature activated packages consume package dependency might rely some our ing since message mentions name ee override parent numbers arrays match pairs long they between pair inputs instantly yield concerns checks before any real work done controlled above place settings returns objects having format idea should able get grapheme using slice libraries"},{"url":"/os/ast-monkey/","postType":"package","title":"ast-monkey","index":"context single html tag can parsed into ast see playground performs operations such nested arrays objects like one above back top challenge abstract syntax trees anything deeply are difficult main problem going branch querying parent sibling nodes second get very big quickly characters produced first often solved by putting circular references tree notice this way query standard json even specialised stringification packages exist what that dipped some went only tactical move nothing strategical program goes another uses indexing breadcrumb paths example traverse find node want index whole path being save down after traversal done fetch monkey delete bloody also use loop array check grandparent lots possibilities method searches using key value both known strategy size something have live with parsers don produce smaller from practice handy evaluate visually gui applications idea conceptually two systems our unique number based system each encountered numbered along integers know object notation instead dot marking powerful used many programs althouh shortcomings dots names function will report ways api search return indexes finding input argument type obligatory description whatever yes options below string least plain put here given default specify within any set either must present missing throw error validated via dedicated package util permitted values case insensitive interpreted longer than zero insensitively equal output comprising more following format integer last element found its parents starting topmost pair address out equals once iterate ing perform findings itself most versatile because go elements backwards numeric id would previously performed pick manually practically typically which performing then depending your needs write particular over piece retrieve returns matched list programmatically overwrite when replace same amended let say identified drop del chosen pairs keys selected deletion having setting acceptable table deleted long matches specifying match otherwise since won ues does matter arrayfirstonly ex versions foreach nan val innerobj null depth topmostkey current traversed contains purpose allow siblings name library called better considered strings really"},{"url":"/os/charcode-is-valid-xml-name-character/","postType":"package","title":"charcode-is-valid-xml-name-character","index":"what does returns boolean given character production xml spec human terms possible ending element this library used detect where html names end article contains depth explanation terminology helped get speed subject back top practice let say are iterating through string by code source will evaluate any tell valid name use most simple scenario characters example above mark ok know spaces equals allowed therefore their there more such oh yes quite lot according warrants proper dedicated only that purpose api two functions one check requirements first another second onwards both return function suitable st char strict than subsequent see below pass including astral into respond with acceptable consumes single can unicode comprising surrogates nd same bit permissive"},{"url":"/os/all-named-html-entities/","postType":"package","title":"all-named-html-entities","index":"idea this package exports plain object with keys key name value type purpose named html entities entity raw decoded total grouped by first character then second last both case insensitive function decodes format integer length shortest currently longest which could interpreted words malformed missing ampersand example back top api looks like point that don have iterate through match instead letter against list varies average tens strings long let tap imagine check there right string index given input empty does start end semicolon error thrown else performed found among known returned"},{"url":"/os/lerna-clean-changelogs-cli/","postType":"package","title":"lerna-clean-changelogs-cli","index":"use once installed call one two ways ps that dollar sign above just means terminal never type purpose this application performs following cleaning steps encountered removes bump only changelog entries generates example these will deleted along with their headings diff links from change into generator produces are universal between gitlab github bitbucket sometimes there bugs them remove turn exception first main heading exampe notice how second character added beside link being removed back top proof pudding eating here ourselves short ci calls package json script cleanses changelogs before npm published builds comitted git have look our yml line by way lerna clean cli can called because monorepo root dev dependency looks like then name could also instead more descriptive considering come after months wonder what such command"},{"url":"/os/ranges-push/","postType":"package","title":"ranges-push","index":"quick take when want gather ranges instead pushing them into array can push this helper class example below that gives us automatic merging sorting also checks types acts like safeguard back top api package exports constructor with uppercase which call using create instances lowercase your contains methods get set values provide optional options object creating key type its value default description boolean added string rd element range only whitespace empty replace either line break there least one single space other cases same applies have surrounded by will replaced number maximum consecutive breaks allowed collapsed result practically setting would allow blank lines output between paragraphs mode concatenate clashing alternative newer overwrites older see detailed explanation validated check mini please behave settings match should any extra keys defined naughtiness cause error know strict prevents misconfigurations helps identify some errors early here place case ever copy then interact newly created calling are sorted first pairs starting from end merged last two becomes challenge what add third above saying characters index something else let customise behaviour opts mergetype insert always concatenated clash indexes latter overrides former aspects modes activate resolved according rules str alias input argument obligatory integer natural yes beginning slice ending delete put new don anything both arguments wrong overload providing fourth fifth too safety because might flag happening code essence behaves ways later extend save time prevent bunch connecting being recorded separate ones exact extension previous method clean read additionally merges completely overlaps another superset larger wipe out subset smaller use thing current fetches state sorts outputs arrays still nothing been since second merge overlap theory does mutate our memory could more again possibly slightly different however aware lose data imagine became now apply amend discover left wanted trouble amended stick original desired conclusion complete operations ing fetch master once feed point really process got everything start sets right after yield scratch newranges existing iterating through adding simple yet psst those originally library part email comb tore placed needed function html img alt detergent uses unit test wouldn hour calculating possible combinations while mutated loop"},{"url":"/os/generate-atomic-css/","postType":"package","title":"generate-atomic-css","index":"api three methods are exported name what does genatomic main function which generates css version exports from package json example string headsandtails plain object with heads tails extractfromtosource extracts source rows separated by pipes back top input takes two arguments optional options str originalopts goes into second argument here keys their values key type its value default description boolean should config repeated wraped enabling this enables well enabled already generated wrapped numbers padded override can hard set outside handy when contains old wrong worker setups provide will called each percentage done then finally result natural number ping unique progress once per percent skew starting counting starts zero one place case want copy paste somewhere output where under format tap like comes straight purpose serve single truth names internal reads line separates above rest challenging part that wrapping plus there only end how use idea basic level turn within range instruction means generate inclusive re happy start put custom happens edit list change ranges add remove rules need recreate original recipe lines help observe setting your placed content furthermore generator detects placeholders wipe existing contents replacing them newly able keep master email template regular comment deploying production still later could reuse"},{"url":"/os/ast-contains-only-empty-space/","postType":"package","title":"ast-contains-only-empty-space","index":"use back top rationale working with parsed html always battle against white space often need know does certain ast piece object array whatever contain anything real just empty that what this library life trees will have many levels nested arrays objects strings while easy check plain only line break mix thereof when your want solid tested which can identify emptiness lack by way weird things like functions don belong structures yield result api input output boolean mutate arguments"},{"url":"/os/csv-split-easy/","postType":"package","title":"csv-split-easy","index":"idea split string representing csv file into array arrays that can traverse later acceptance criteria should accept with without header row might have different amount columns than rest rows content offset from there various line break types whatever ignore any values wrapped double quotes interpret commas part value empty fields output them strings automatically detect dot comma remove thousand separators digit only cells minimal dependencies unit test code coverage ways per branch statement function outside scope trimming leading trailing space just use parsing numeric parse yourself this lib sorting entry accounting see back top api input spliteasy str opts other words which takes two arguments second one optional marked by brackets out same numbers too are set options object key type obligatory default description boolean swiss style russian pad decimal place zero convert separator dots here returns when nothing given always within main something least example algorithm files especially ones assume don want parsed means conventional splitting libraries would inefficient because after clean requirement column support mixed metro bank used produce these banked third requirements mentioned above pretty much rule regex based algorithms need possible each check wrapping first best single loop traversal detecting ing worked very well email comb where unused css html template around times more characters travelled traversing also img alt needs through fix tag attributes crap"},{"url":"/os/eslint-plugin-test-num/","postType":"package","title":"eslint-plugin-test-num","index":"idea proper way write unit tests put identifier number test title message automatically maintain both that lot numbers update manually isn back top purpose consider same failing node tap terminal output will which from those above prefer last one when there are more problem exaggerated can easily find by searching what other two how supposed look copy search code memorise scroll many screens visually identical messages multiple mind moment this monorepo total assertions done with median across currently packages lots here indentifier each unique main reference given eslint plugin updates these setup first make sure itself installed among dev dependencies below means dependency opposed normal quick refresher publish npm package somebody installs its don get they your essence differ program testing install them via flag some basics then need configure use know pluggable reason why won over predecessors jslint jshint runs only rules asked warning levels asking configuration file have config yet nip another project tweak initiation script configs dot files hidden system best practice visible now example following rule row set correct num comes report findings error level instructions add plugins section real notice key reciting documentation different settings turn warn doesn affect exit triggered without quotes string thing ps check out where exactly did came especially relevant rollup programs ran against source originate"},{"url":"/os/is-relative-uri/","postType":"package","title":"is-relative-uri","index":"background example html attributes have uri type values this program validates are specifically relative references typed correctly will go internet check actual asset online only tell mistyped something consider attribute there two kinds value types those that start with scheme whatever don like normal way called fine too spec wise least theoretically these also see wikipedia more considering base following would get resolved accordingly back top validating them saw can pretty much anything including empty string random letters what thing left try catch bad patterns conceptually tells given messed from perspective pattern far our imperfect algorithm sees mainly whitespace repeated things tripple slashes double question marks dots after hash must followed by letter others api input isrel str opts other words function which takes options plain object argument obligatory description extracted css media query without opening bracket optional here error thrown key default boolean should yield output returns clone similar schema flagged via always either message false happens checking set distinguish were real errors when one use libraries strict url superb package search schemes falsey result detects known another challenge same seemingly correct"},{"url":"/os/string-remove-duplicate-heads-tails/","postType":"package","title":"string-remove-duplicate-heads-tails","index":"idea let say know that variables are wrapped with heads example tails this library detects deletes redundant around whole input string also smart legit edges exclamation turned into what mainly about being able detect outer currently wrapping single chunk text those from separate chunks lib removes leading trailing empty clumps without space can configure whatever like array them length different your given set back top api argument type obligatory description yes source upon which perform operation plain object optional options see below its will key value default non one more strings put here way mark beginnings endings these double curlies nunjucks jinja many other templating languages favourite output returns"},{"url":"/os/string-collapse-leading-whitespace/","postType":"package","title":"string-collapse-leading-whitespace","index":"quick take custom trim strings aimed clean leading trailing whitespace considering might contain linebreaks back top api input argument type obligatory default description string yes undefined source work natural number excl zero maximum line breaks that will put when contains any first just returned untouched second falsey set application continue normal output more characters same thing without error logic explained examples sequence than one space gets replaced with single tabs other which are non breaking spaces new lines lf there can count by outcome"},{"url":"/os/object-merge-advanced/","postType":"package","title":"object-merge-advanced","index":"purpose like lodash correctly merges different type things behaves well when encounters nested parsed html lots arrays objects strings imagine merged identical keys two judging their values by hierarchy instead non empty array trumps below plain object string number boolean doesn trump anything idea strive retain much datum possible after merging example better with than there are plenty settings mainly aimed templating needs can tap callback override result any way that what this library does will recursively traverse each key compare exists only one goes straight into both got clash value chosen its which numbers booleans won have they get fed back again using logical within those smartly depending keysets similar separate elements ten combinations types first input second full large centre square shows prevails diagram above squares show gets assigned merge marked pink fields sky blue some cases perform custom actions passing main function pay extra attention options present contents taking special measures composition mention overrides put overriding check unit tests see action top practice use humongous json files house our templates data must overwritten ones such also small where suitable filling missing doing other operations coming from api mergeadvanced argument obligatory description yes normally literal whatever else work too deeply thing something optionally pass third default allows intervene right before returned gives suggested return arguments controls dedicated chapter these kept changed wildcards overwrite counterparts matter contain resulting setting set another many handy defaults structures anywhere always unidirectional concatenate go intact final added don exist option dedupe should used conjunction really ensure contains unique calculated them switch former dealing content driving email latter vs order yield explicit false turn incoming good without need wrapping conditionals concat operation parameter items contained force hardarrayconcat here place output probably same your inputs mutated very important name matters call anyway variables wish clashing comes named position row algorithm already decided would were variable arbitrary location info about names paths plus parent details table remember either rd arg because otherwise written particular fourth definition path therefore applies sides whose being usually sometimes might want able distinguish belong th then just powerful could pretty listed higher returning others every case bigger hard meaning keeping normal rest inside wrap double curly braces kindof consider null traverses easy make sure substitute let say regular except certain concatenated fine overwriting illustrate deeper how insurance accidental sets least notice sits safeguard differences difference stuck mismatching neither ast nor deep recursive existing weigh happily placeholder template builds import scss file overwrites global colours per needed now re vast majority customisation background done real means receive css"},{"url":"/os/array-of-arrays-sort-by-col/","postType":"package","title":"array-of-arrays-sort-by-col","index":"quick take sorts array arrays by any column default first element zero th index algorithm tailored integer only values consider this arrangement js code that sorting against result would output rules when compare two rows particular then are equal look around those left side right even there ripple outwards accept normalised into matrix with absent value fillings set same behaviour back top certain example let sort second api input sortbysubarray arr other words function which takes arguments argument type obligatory description more yes source data put ast natural number like string should match subarrays each sub sorted"},{"url":"/os/codsen-parser/","postType":"package","title":"codsen-parser","index":"notice currently being developed please come back later"},{"url":"/os/object-set-all-values-to/","postType":"package","title":"object-set-all-values-to","index":"purpose take any input nested array plain object whatever really matter how deeply walk through recursively find objects assign their keys given second argument default does mutate arguments operations are done cloned needed this library overwrite values json schema that later when copy from key value pairs equal don need prep them further well tested being used commercial projects back top use api type obligatory description yes ast tree can hopefully contains some found output same thing gave first except with overwritten where applicable"},{"url":"/os/string-process-comma-separated/","postType":"package","title":"string-process-comma-separated","index":"purpose imagine need extract validate html attribute values first algorithm idea seems simple real life proper extraction quite complex cover error cases there might surrounding whitespace spaces after comma ok plain errors like leading non space characters that look nbsp this program helps chunks strings from potentially separated list string single value without commas separator configurable via wish are pinged separate callback function back top usage same thing use callbacks which allows tailor what happens with gives here contrived example too crazy shows capabilities instead expected have above extracts both index ranges fed reports rogue tabs breaking saves time having tackle those possible separators consecutive api processcommaseparated str opts input argument key type obligatory description yes object options see below its arguments supplied any other types will empty thus fine exit early main must pass default integer falsey where does chunk start end handy when been given cropped want report indexes offset adds number each reported boolean beginning range can split into character ping extracted one place output return anything returns precise cb second set arrow could normal declared well two passed position call whole assume already didn give traversed would your full code omitted brevity anyway strictly speaking don expect something matter grab things way our errcb similar only message array zero more arrays indicate fix recipe about quick primer three elements match optional third present means add element deletion replacement made processing libraries whatever take them returned discarded sometimes keywords then allow between media queries setting by doesn inner within turn"},{"url":"/os/ast-monkey-traverse/","postType":"package","title":"ast-monkey-traverse","index":"idea walk through every single element array key object string given input use familiar callback function interface just like api inner method meant used by other functions does actual traversal ast tree whatever gave from simplest most complex spaghetti nested arrays plain objects this ~method~ via similarly very important return value point marked above because otherwise will written over current piece being iterated want delete back top innerobj when call get four variables set stop currently traversing going each pair elements type description integer number zero root topmost level deeper increments path uses exactly same notation popular package example would take st index second row since indexes start are deep parent traversed whole which contains its purpose allow query siblings either includes etc stopping here how let gather paths first way dots too instead were gathered now make monkey notice there more after only compared can amend matters what within read reads see future nodes reports report many upon request personally context linting parsing tooling re don need mutate yet next order patch errors"},{"url":"/os/object-fill-missing-keys/","postType":"package","title":"object-fill-missing-keys","index":"purpose this library fills missing keys plain object according supplied reference driving json comb core method back top how works performs key creation part files normalisation operation file making set have same here slots process first take two more objects normally originating from contents then calculate schema out them superset possible used across your finally go through second time one by fill using takes generated optionally custom placeholder don like boolean creates arrays that alternatively can use just add mind performance reasons expected values equal placeholders way when happens merged over those come into right places means provide with some having non get written onto previously kept insurance function which took overwrote its understood normal schemas will always anyway such would waste resources example api input arguments are mutated inputs cloned before being important argument type obligatory description yes nested contains desired hold things optional options see below value default anything only combination compare children contain won patch make sure usually array zero strings handy activate ad hoc data structures limit bloat filling setting there existing assigned even otherwise something under bonnet named merge advanced lengths sometimes either very large trees they rarely cases want manually trigger done find path normalising notation following put name element id skip ignored falsey re different start comparing branches what structure during any given paths normalised truncated opts supply explicit completely diffuse incoming truthy ultimate turn usual rules merging apply null towards bottom priority scale gets trumped nearly every other mention empty"},{"url":"/os/ranges-iterate/","postType":"package","title":"ranges-iterate","index":"quick take iterates characters string given ranges were already applied following example punches out hole from included replacing with that what gets iterated sometimes certain operations aren really composable want traverse had final result back top api iterate str cb offset other words this library gives synchronous function exported default must feed three obligatory arguments fourth optional marked square brackets input argument type description yes are operating zero more arrays gathered far something falsey callback able consume indexes character values index natural number can cut corners start later"},{"url":"/os/json-sort-cli/","postType":"package","title":"json-sort-cli","index":"use once installed either call with file name folder list thereof without flags same thing wired both see api section help via cli back top short long description don ignore any ode_modules folders package lock json abs indentation how many spaces tabs default tab when output shown only exit codes determine success failure also sort arrays they contain string elements shows similar this elp ersion your skip files paths does nothing exits non zero code could sorted needed put version desired flag before after path example these commands below are what exactly sorts deeply that matter plain object within array objects deep will detected tool processes disable first alphabetically then npm arrange keys according commonly agreed format depedencies bottom etc parsing type application written prettified tabulations whitespace fixed arbitrary order leave setting indent using two one used under bonnet uses ast monkey traverse extra features by works dot parse able can process set wildcards broken stop other healthy from batch still notifies user system like processed worry about excluding them input ci mode won amend calculate result compare contents sorting would make difference basically scripts fail unsorted thanks widerin idea feature write another"},{"url":"/os/ranges-crop/","postType":"package","title":"ranges-crop","index":"quick take crops ranges ensuring range from array goes beyond given index along way will also merge sort back top api crop arr strlen input argument type obligatory description zero more arrays yes provide invert have sorted merged natural number algorithm needs know length reference string calculate inverted last slice ending output called where each consists two indexes this package does mutate creates returns new with cropped"},{"url":"/os/ast-monkey-traverse-with-lookahead/","postType":"package","title":"ast-monkey-traverse-with-lookahead","index":"idea original had means edit ast couldn give next few values that are coming only saw current thing traversed while working found don need editing functionality perf win see what nodes instead bloating slowing down decided create alternative flavour this program back top api function traverses tree given first input argument use via callback arrow below example similar way unlike read return anything inside can delete change innerobj when call like get four variables set stop traversal currently traversing plain object going each key value pair will array through elements element type description integer number zero root topmost level every deeper increments by string path uses exactly same notation popular package would take st index second row since indexes start from very deep parent being whole which contains its purpose allow query siblings either includes functions arrays etc more representing arguments reported looking into future point able otherwise re using vanilla request how many sets want have third now populated with upcoming consider didn lookahead default simply pushing inputs notice above empty reporting one requested stopping here let gather paths marked dots too were gathered make monkey there after affected does matter happen right place why aimed used enable parser patch errors sees something wrong needs node decision missing rogue should skipped normally people mutate note perform operation outside other hand deletion feature impacts performance made"},{"url":"/os/email-all-chars-within-ascii/","postType":"package","title":"email-all-chars-within-ascii","index":"idea traverse string check characters are suitable bit encoding other words within basic ascii range first does include any invisible control don want anything below decimal point except ht horizontal tab number lf new line cr carriage return often del overlooked yet right your templates especially email that sense non regex likes dangerous validate template code because they too lax also error lines exceed permitted length our algorithm will earlier more than consecutive lr lengths count end which two extra reach back top api str opts function second input argument optional marked by brackets only program options object else plain traversed when unacceptable character encountered thrown sanitised types mini set keys wrong add unrecognised thank later here defaults one place key type obligatory default description boolean should append front each message turn like cli app throws between spec says maximum total text including usage practical use re going this library part final qa theory html encoded have outside etx practice depends server what using deploy emails quoted printable base encode however prepare worst deliver ready conforming beyond ps acceptable out version can install globally terminal"},{"url":"/os/string-trim-spaces-only/","postType":"package","title":"string-trim-spaces-only","index":"quick take back top api trimspaces str opts function input argument key value type obligatory description string yes want trim some way plain object optional options see below its arguments are supplied have any other types error will default boolean set trimming becomes same should carriage returns cr line breaks lf tabs spaces raw non breaking here one place output since name zero more characters result after array arrays trimmed anything each slice range added into this sometimes need just ranges what would merge them compiled process later along everything else those cases use worth substitute performance reasons"},{"url":"/os/string-find-malformed/","postType":"package","title":"string-find-malformed","index":"usage below look dodgy cases stringoffset this number will added every index reported callback maxdistance how many characters can differ before disregard that chunk ignorewhitespace true character trims zero length skip default setting create empty array dump results into const gathered call function strfindmalformed first input argument source abcdef second what mangled bde obj push options object console log idxfrom idxto double check with string slice bcde because rogue letter between good letters"},{"url":"/os/ranges-is-index-within/","postType":"package","title":"ranges-is-index-within","index":"quick take tells given natural number index within any ranges wrapper top back api input argument type obligatory description yes re checking array zero more arrays null example plain object optional options see below its wrong will cause key value default boolean that consider range answer set would instead result return matched still used negative handy when want know which output answering question found positive simple encoding using settings algorithm tried binary search native are around faster"},{"url":"/os/csv-sort/","postType":"package","title":"csv-sort","index":"quick take can correct order rows any accounting csv files that come double entry bookkeeping format currently late lloyds bank website exports with some from same day wrong this library our attempt fix such back top does two twings sorts follows trims empty columns called trim later releases would like able recognise offset caused by misinterpreted commas values string sort spatial data usage api input output plain object type description array arrays each containing column value application outputs messages here either similar icon hypothetical ui anything else than will key equal"},{"url":"/os/string-split-by-whitespace/","postType":"package","title":"string-split-by-whitespace","index":"idea split by whitespace easy use sometimes need ignore certain index ranges above string consisting spaces tabs linebreaks back top api input argument type obligatory description yes source upon which perform operation plain object optional options see below its key value default array zero more range arrays feed slice two natural number indexes like algorithm will include these results can empty contains anything else then inside error thrown output program returns strings yields some basics first when say heads tails mean templating literals that wrap frontal part example ending now imagine extracted know their select from front hi where each head tail starts ends numbers match want into skip those become handy used library find extract variables whole including variable names reduce adapt format are only examples with help turn our second"},{"url":"/os/ranges-ent-decode/","postType":"package","title":"ranges-ent-decode","index":"quick take this wrapper top market leading html entity decoder he js which returns ranges instead string tested hell out code directly dependency stream cherry unit tests were ported pass back api crop str opts other words function takes optional options object input argument key value type obligatory description yes text want strip tags from plain see below its any arguments supplied are types error will output array one more range arrays completely matches default boolean entities decoded they attribute values read here that can cause parsing errors place case ever copy whole algorithm biggest pain main usp library being able recursively decode give result by mean over until there difference between previous last decoding practically means tackle unlikely possible cases double triple encoded strings example original dash turned into first encoding round then during second ampersand got lead instructions what change order don lose character indexes turn gather join them later where encode wonder need when traverse each ~code point~ grapheme emoji length six should counted through compare before after two different create new simple because processed iterate care about unicode astral characters"},{"url":"/os/gulp-email-remove-unused-css/","postType":"package","title":"gulp-email-remove-unused-css","index":"example back top options since main purpose this library clean email html needs cater code specifics one them that css styles will contain fix hack meant software here are few obviously using above classes id your what means they would get removed present only avoid pass whitelist key value array can also use glob order simply next level start overgrow plugin baby shirt want work with directly string stop api gulp idea following everything flows vinyl buffer streams tap stream convert perform operations then place wanted come visual analogy waste pipes thought rather won wise there many benefits tapping npm packages without plugins add more functions wrap over conversion happen once each those did their conversions less efficient yes should adds complexity same worse maintained than which drive often latter case might misconfigured fail even though package fine bigger surface test maintain report bugs just regarding removing unused from web pages competition used any where external stylesheets javascript could remove dynamically quite rare find page like newsletters aimed cleaning website perfectly well both markup language need advanced removal tools check out uncss runs headless browser capable parse however by magnitude slower definitely overkill direct competitor postcss uses cheerio tied outside its testing dependent other hand wrapper comb tool independent reads outputs core functionality decoupled wrappers posthtml grunt font end interfaces anything else past detergent front doesn while does important because some hacks based causes view toolbar menu link appear outlook style must recognise white list"},{"url":"/os/is-language-code/","postType":"package","title":"is-language-code","index":"idea this program tells given string valid language tag based rfc tags identifying languages which released jan still current are used many places example html attribute very hard properly match spec using regex only can validate that allowed characters meaning those have position subtag arrangement matters also returns explanations why deemed input wrong because contains two region existing solutions like ietf don much logic besides enforcing order length reports any longer than other hand each value against known iana registered names back top api islangcode str words function takes empty negative answer will returned output clone plain object non inputs always yield does throw case sensitive there exist conventions capitalization some subtags they carry performance reasons references uses lowercase even entered uppercase would get reported posix by way code replaced with won include similar included following codes been added nothing later ug uigur iu inuktitut called eskimo za zhuang he hebrew replacing iw yi yiddish ji id indonesian"},{"url":"/os/is-char-suitable-for-html-attr-name/","postType":"package","title":"is-char-suitable-for-html-attr-name","index":"idea detect given character suitable html attribute name back top api input isattrnamechar str other words function which takes one string argument key value type obligatory description yes evaluate this program does throw just returns longer than its first used zero length yields same like non values output boolean erroneous arguments will yield well ps need comprehensive list possible names check out"},{"url":"/os/ranges-process-outside/","postType":"package","title":"ranges-process-outside","index":"quick take processes string outside given ranges each gap between will fed into callback supply same like see example above end index inclusive character covered by that why when processing gets pinged this program makes life easier because did manually have invert loop over inverted chunk finally write unit tests back top api processoutside originalstr originalranges cb skipchecks other words function which takes arguments input argument type obligatory description yes source array arrays indexes these processed provide boolean default checks are performed upon inputs can turn boost performance operates fashion just arrow following natural number zero starting programs pings ending something falsey bump below more inside gives call with single instruct outer skip many characters one third lets looping way being detergent html code bunch invisible detected their from pushed gathered while further avoids booked deletion marked uses work everything locations now detects named entity once stumbles its first ampersand does what needs skipping action here passed module imported file nearby processcharacter js initiate any taking than length crlf line breaks encoded entities"},{"url":"/os/ranges-sort/","postType":"package","title":"ranges-sort","index":"quick take sorts ranges back top api rsort arr opts other words this library gives function must feed array into its first argument also wish can second optional options object bracket means input type obligatory description yes zero more arrays meaning natural number elements each plain go here example does mutate inputs theory javascript could arguments only they are primitive key default boolean set have two otherwise error thrown being would throw well element given will called with percentage total work done approximate used worker setups output sorted sort by child range then whole one place defaults case want copy"},{"url":"/os/codsen-tokenizer/","postType":"package","title":"codsen-tokenizer","index":"notice currently being developed please come back later"},{"url":"/os/string-extract-sass-vars/","postType":"package","title":"string-extract-sass-vars","index":"quick take parse sass postcss variables file into plain object back top api other words function which takes two input arguments string optional options above those square brackets mean argument type obligatory description inputstring yes process see below example typical this program key its value default boolean extra insurance can set throw didn extract any keys enabled by put here each are defaults one place output returns zero more pairs production have many things worry about imagine something went wrong with your scss mangled else would find yield empty notice know that there will always least extracted source error instead silently yielding option disabled think middleware pass then before placing result feed use gives opportunities values turning digit hex colour numbers email friendly another what doesn parser files simple pair style content fully fledged code please fancy bits nesting partials modules mixins extend inheritance operators why need sometimes want css inline html styles depends templating engine case nunjucks load variable global environment gulp eleventy script runs everything node read containing line outout parses extracts after rendered conceptually allow us dry single truth constants react component based web development storybook documented similar thing just globals won them both template logic calculations column count"},{"url":"/os/string-extract-class-names/","postType":"package","title":"string-extract-class-names","index":"quick take extract class id names from string returns array back top api other words function which takes two input arguments brackets mean that argument optional type obligatory description inputstring yes process returnrangesinstead boolean default return arrays strings selectors optionally ranges by slice elements where both match first more examples packages use identify css parsed html library email comb detects deletes unused styles"},{"url":"/os/string-strip-html/","postType":"package","title":"string-strip-html","index":"quick take void back top examples remove html tags give clean string leave only don mutate yet ranges because widows too then merge apply them one go list index locations extracted values make text version from email template features adds removes whitespace output presentable tag pairs along with content inside handy works broken partial incomplete non valid mixed other languages does parse can used generate versions puts url links detect skip false positives example enabled by default optional recursive decoding nothing will escape api input striphtml opts words out function second argument options type obligatory description yes want strip plain object see below its arguments are supplied have any types error return here key name value where were applied array more arrays containing characters deleted that would another found put zero each pair get ended stripped reported takes into account unlike above strings these removed names given else something falsey opening closing including between set turn boolean escaped entities recursively decoded before stripping need mainly automated setups ensures spaces trimmed outer edges customise link enable feature also location wrapping gives full control lets tweak dedicated chapter validated please care what pass place case ever copy whole using composable amendment instructions they indexes range means instruction delete which otherwise fall replace there note pieces replaced character just strict feed nice result instead single split over multiple json paths those cases joining breaking intended often placed around normally treat surrounding rogue this setting allows distinguish two imagine stitch sentence three chunks added your templating engine now quite large risk wrong places client asks ensure never lines space move data level hard code after know library trims returning always settings particular either even better use detected still aggressively when outside algorithm stop first turned notice how retained dumplinkhrefsnearby purpose disabled inserted nearby putonnewline whatever left linked piece force new line separated blank wrapheads empty front every wraptails straight aimed producing promotional transactional campaigns equally without passing sometimes certain impractical ignore known option inverting program starts filter ed length necessary presence switch application mode bad accidentally cause work combination listed respected excluded maybe write custom conditions extra being ignored fix within under whenever wants call style following keys contains internal feel free tap contents cb point callback interface action pushing user opposed suggest push final perform proposes proposedreturn going tells slash considering some whitspace minding speaking scientifically lexer scanerless parser simple language parsing ast trees processes doesn understand errors etc skips quality dependencies our own very popular substack himself well lodash"},{"url":"/os/detergent/","postType":"package","title":"detergent","index":"quick take detergent js deletes invisible unicode characters collapses whitespace trims recursively decodes entities optionally strips html with optional granular control over what exactly encode non ascii example into improves english grammar style prevents widow words converts dashes apostrophes curly quotes aims named switches numeric those which don render correctly across email clients extra features are can skip encoding latin language letters useful when deploying japanese chinese emails because otherwise everything would encoded both xhtml friendly set way want your appear closing slash without that reduce code validator errors back top api main function exported plain object under key see its below default options pass tweaked version returns same package json value particular copy got input above two arguments argument type obligatory description string yes clean arrangement second boolean true should try fix any broken like missing replace last space paragraph breaking chars typographically correct line breaks false put one removes inserting where necessary add slashes character cjk alefbet ivri arabic abjad adds spaces after dots colons semicolons unless url convert three ellipsis ellipses will converted by tags stripped exception option ignore other turn tag removal completely here array list zero more strings each meaning name names replaced break must start something falsey callback additionally process between turning uppercase place wise choice most common scenario preparing text pasted also shorter than output cleaned keys have values applicable given next generation web applications designed show only this saves user time conserves mental resources even need read labels they currently them lot use tool every day optimisation counts inspiration feature while visiting competitor application typograf checkboxes grouped groups hidden twice first sidebar visit page collapsed another overwhelming kangax minifier heavy descriptions tackles problem changing algorithm processes then makes note independently enabled changes result might look there nothing abc omitted from report custom settings setting others left unique complex program recognition touch word won within choose strip lets perform additional operations outside io lowercase functionality relies consider case skipped"},{"url":"/os/email-all-chars-within-ascii-cli/","postType":"package","title":"email-all-chars-within-ascii-cli","index":"quick take call one file just application will let choose from that folder multiple files once back top use installed whichever easier remember idea this cli app check does your html some other extension contains non ascii characters specifically are contents suitable bit encoding words within basic range first however only would short sighted invisible control anything below decimal point fall bad don want any except ht horizontal tab number lf new line cr carriage return also character del which technically falls might appear broken email consumption software practical re going library validate our templates part final qa theory should encoded have outside like etx practice depends server because esp end encode rogue trouble prepare worst deliver ready conforming spec beyond ps acceptable out api version works well gulp environment"},{"url":"/os/util-array-object-or-both/","postType":"package","title":"util-array-object-or-both","index":"purpose standardises input strings user given assumed array type object either string output back top api arrobjorboth arrofranges opts valid normalised version will returned error thrown argument obligatory description yes let users choose from variations both see above plain optional options below its lets customise message format following key default append front name variable are checking here example set misconfigures setting use going ast monkey json variables delete"},{"url":"/os/is-html-attribute-closing/","postType":"package","title":"is-html-attribute-closing","index":"idea detect character given index string being closing attribute happy path scenarios quote this program detects crazy cases realistic unrealistic html endings back top api input isopening str idxofattropening isthisclosingidx other words function which takes three arguments argument key value type obligatory description yes zero more characters natural number opening ask evaluate does throw just returns anything wrong with false never throws that because used inside programs proper algorithms will use care only about truthy case pass one crappy yields days consuming continue whatever dodgy journeys they have been making don errors output boolean erroneous yield well bigger picture drive there already similar from yours truly tells bracket start tag same situation its unit tests became too big even placed folder separated into standalone package"},{"url":"/os/is-html-tag-opening/","postType":"package","title":"is-html-tag-opening","index":"quick take detect opening bracket tag otherwise might un encoded text back top api input isopening str idx other words function which takes two arguments argument key value type obligatory description string yes zero more characters natural number index supplied are any types error will thrown output boolean purpose this program tries tackle much broken code cases possible recognises various unclosed tags example also aware known html use that information its algorithm comes perf cost theory same without support would source can won ever contain unencoded raw brackets pairs always closed every"},{"url":"/os/update-versions/","postType":"package","title":"update-versions","index":"quick take update dependencies packages monorepo single repo latest per npm different kinds monorepos here where life between front end web dev react spa open source package worlds js programs very rarely need any intervention after updating even updates new major releases other hand are fragile minor version bump dependency can break everything assumed always want patch bugs right away that why using wise idea component well questionable ps notice how uses fixed deps caret gives instructions world back top what does this cli will iterate given path its sub paths process each normal setup another exists with such name set format cases value from fetched good lerna full owned versions often effortlessly bad might many things big complex deal opinionated part work properly prefixed hard manually enforce should have force one exception starts listed both removed latter list common sense mention extra build goes wrong key called created normally cleans go left there removes every processed"},{"url":"/os/detect-is-it-html-or-xhtml/","postType":"package","title":"detect-is-it-html-or-xhtml","index":"example back top purpose feed string into this library more html will output xhtml your code doesn contain any tags does there impossible distinguish between two api input package exports function detect str argument type obligatory description yes hopefully containing some throw error missing completely return value null identified under hood algorithm following look recognised bob uncle here answer messed beyond recognition scan singleton see which majority closed rare case when equal amount both unclosed lean are doctype"},{"url":"/os/edit-package-json/","postType":"package","title":"edit-package-json","index":"idea plain objects javascript somewhat retain their key order after parsing easy mess there are programs out like format package which sort this program attempt edit json without string api uses object path notation set values any now only already existing paths wrote quite few non processing starters could see coming needed bullet proof way back top two methods when consume function can by early stage create new keys will change delete value exists primary difference from more mature popular input source val argument type obligatory description yes file contents desired must follow whatever what insert given output amended returned repeat again yet still baby state del put into style example"},{"url":"/os/ast-get-values-by-key/","postType":"package","title":"ast-get-values-by-key","index":"use tag getter parsed html setter just pass array values write third argument back top purpose when parse some using parser get which contains ast nested tree strings objects arrays this library lets query that can key want later amend feed result again into overwrite two arguments triggers mode three set over api are given receive zero more plain with keys where follows notation copy original input changed accordingly does mutate any"},{"url":"/os/is-media-descriptor/","postType":"package","title":"is-media-descriptor","index":"example error objects match those ranges value matches spec index array third element means what add only two elements deletion back top background are talking about called media descriptors older newer css mq level draft moment part both html plan catch many errors possible typos unclosed brackets redundant characters untangle boolean logic anything that can happen queries selectors general this replacement validator linting tool will use conceptually very permissive doesn like something invalidates moves light needs opposite api input ismediad str opts other words function which takes string options plain object argument type obligatory description extracted attribute query without opening bracket optional go here calls below yield empty bad don put please extract feed with returned key default integer reported indexes incremented by much falsey fine truthy natural number throw output program returns zero more each meaning notation same except there quick basics just used marking either eslint uses singular emlint plural because where marks thing separately puts always arrays follow packages process them merging inverting resolving applying competition capable parsers out they oriented parsing correct code strictly pure validators built upon such really serious csstree think catches break parser drives how similar policemen thieves pay government month police wages broken mixed sources need rambo trained dealing guys aimed processing power linters find fix possibly editor does work from ast processes"},{"url":"/os/string-overlap-one-on-another/","postType":"package","title":"string-overlap-one-on-another","index":"idea place one string top another essence back api overlap str opts input both methods same argument type obligatory description yes which will put under over plain object optional options see its below separate table key value default positive negative integer zero instructs offset by this many characters right number left space character amount push pushes outside boundaries even there gap formed out these single here are defaults edge cases algorithm following only two strings long other returned result empty non second overlaid first considering practically consider sample above though enough warrant filler added because"},{"url":"/os/string-collapse-white-space/","postType":"package","title":"string-collapse-white-space","index":"quick take find chunks whitespace characters that zero length replace them with single space then trim each line back top collapsing string first outsides collapse two more spaces into one when trimming any will collapsed including tabs breaks only are non within text won optional by default aggressively recognised html tags delete empty rows api opts input argument second options object anything else than plain key type obligatory description boolean leading just might example there bunch trailing every trimmed kinds deleted also breaking set answer would yes this setting affects above directly tag brackets tightly touch other such can removed enabled ranges array arrays nothing returned instead natural number allow many blank lines between content defaults algorithm traverse once gather list indicating white indexes go return new library traverses performs deletion recognises windows unix linux endings optionally recognise out equations even follows current version detect false positives counting amount equal double quote break suspected part plan means suspect got attributes case least sign count unescaped quotes otherwise from particular"},{"url":"/os/ast-get-object/","postType":"package","title":"ast-get-object","index":"purpose when parse some html using parser get array which contains nested tree strings objects arrays this library lets query that later amend feed result again into third argument can overwrite search results basically right away short two arguments three set write over whatever queried normally would use tags from parsed trees edit back top api input type obligatory description yes ast object deeply plain key value pairs look arrray new values findings those even massive doesn matter output depends mode will parent hold asked same your with had replaced contents replacement mind supply too few elements replacements won anything example reading querying let contain true fashion everything there are other around each holds requested pair put always wrapped just one finding above writing task take find replace solution ps notice also keep like cartridge expect separate re ok case our"},{"url":"/os/object-all-values-equal-to/","postType":"package","title":"object-all-values-equal-to","index":"purpose answers question does given ast nested plain object array whatever contain only one kind value equality explicit that re just checking values are unequal example back top when working with data structures this library would used check certain piece json some key blank contains placeholders everywhere now regards arrays default should directly customised placeholder instead against second argument will yield former latter relevant dealing other kinds objects within count turn set observe api input type obligatory description yes tree can deeply hopefully love every please don optional options its boolean present result allow more here defaults place case ever want copy tweak output why need were fill missing keys takes reference fills according implementing feature switch which let skip filling chosen they currently throughout whole also simple equal something"},{"url":"/os/lect/","postType":"package","title":"lect","index":"quick take opinionated npm libraries maintenance cli app before migrated readme codsen com used replace chapters suitable automation installation instructions badges since migration nunjucks eleventy does job only generates placeholder auxiliary files sits monorepo root doesn need managing there one file anyway same with back top"},{"url":"/os/string-unfancy/","postType":"package","title":"string-unfancy","index":"idea this library converts fancy strings like curly apostrophes into ones single quote one could say opposite detergent main purpose simplify images attribute content email templates list covered characters includes kinds quotes double dashes non breaking space also will recursively decode any html entities before performing replacement ps want higher level tool img alt uses performs many more fixes adding empty attributes they are missing cleaning whitespace between trimming contents even replacing back top usage api simple out caveat input example treating image gulp stream tapping using build can apply function then within that replace instances with their unfancied versions first need tap string unfancy your task probably towards end pipeline declare somewhere see above re running inline upon regex matched lose encoding have special converted ascii letter equivalents use instead won convert dash different"},{"url":"/os/html-crush/","postType":"package","title":"html-crush","index":"quick take minify email template production set line length limit default back top solves tasks reducing size least possible remove indentations keep breaks opposite tabifier beautifiers features this program does parse input can html whatever mixed with equally errors broken incomplete quite mailchimp responsys exact target campaign monitor tags your fine side priority application also takes into consideration human friendliness its api npm library reports progress gui front end utilises allow responsive ui deliberately options count under considers white dark interfaces use modern toggle switches css hovers react any interaction giving javascript choices commonjs transpiled es untranspiled modules code umd dependencies baked published accessible via jsdelivr cdn developer source fully which report numbers actions they happen builds strip logging course means easy come later first time debug exports plain object where main function key crush that why consume like str opts other words two arguments argument position call type obligatory description string yes zero more characters second optional see below supplied are types error will thrown output exported return find log data result corresponding ranges performed name value example array range arrays notation number when removing what maximum relevant only boolean should answer enabling automatically enables comments there settings instructs non outlook removes including conditionals concerns both head inline style within attributes supply here called given natural percentage complete moment values from finally percent squeeze reporting percentages start different go strings encountered option current terminated setting active turned want disable either empty such accidentally introduce extra text precautions minifying around one place case copy paste somewhere feature used web worker setup basically pass passes messages message final many sequence each meaning done far then full latter exactly happening our anything else than fed now how distinguish results random unlikely append secret being passed checks did came through have using render gathered above same approach lets us process further add merge them apply"},{"url":"/os/str-indexes-of-plus/","postType":"package","title":"str-indexes-of-plus","index":"idea search string another return array indexes any findings astral character friendly allows optionally offset starting point rd argument usage back top api indx str searchvalue fromindex returns zero more numbers each indicating index finding first unicode characters are counted correctly one long type input which want perform second re looking natural number optional third from start searching algorithm came with unique follows way how would strings iterate through given letter found check does match matches continue matching consecutive anything mismatches new continuing along"},{"url":"/os/object-flatten-all-arrays/","postType":"package","title":"object-flatten-all-arrays","index":"purpose recursively traverse cloned input merge plain objects within each array example back top api returns same type thing given only with arrays flattened none arguments are mutated their clones being used instead argument obligatory description whatever yes ast tree object can deeply nested hopefully contains some set options this see below keys key default boolean any contain strings flatten them empty turned by what actually need most time"},{"url":"/os/ast-compare/","postType":"package","title":"ast-compare","index":"purpose find out does object array string nested mix subset equal another input main compare two parsed html css trees their branches can anything will recursively traverse arrays too this lib dependency ast delete library which elements from objects back top use api output binary boolean mutate arguments argument type obligatory description plain yes super set larger thing above smaller containing settings everything matches within returns otherwise there mismatch something wrong with args options key default any chunk whitespace tabs spaces line breaks match other white space when want like instead message explaining what didn cases important report superset returned value always depends yield examples opts verbosewhenmismatches sometimes just answer whole point comparison inform user exactly mismatching latter function return explanatory setting have anticipate else coming rationale check deeply strings example some normally would deed positively empty against terrible hence plus accept adapt sources combinations that necessary support whatever differences ismatch partial comparisons source values respectively lodash documentation bad are comparing doesn reported non"},{"url":"/os/string-range-expander/","postType":"package","title":"string-range-expander","index":"usage this library used manage whitespace string index selections from indexes correspond beginindex endindex api described mdn back top expand opts function exported default can name any way like when input argument key value type obligatory description plain object yes options see below its arguments are supplied have other types error will optional empty reference number natural which should backwards characters left side given range want tigger tight crop concatenated into one chunk skip they were right boolean strings only using extended until reaches first non character eol prevent accidental concatenation by inserting single space situations here place copy paste somewhere output array two new example"},{"url":"/os/string-fix-broken-named-entities/","postType":"package","title":"string-fix-broken-named-entities","index":"purpose this program detects fixes broken named html entities algorithm levenshtein distance smaller match by longer allow practice means can catch errors like mistyped also works healthy catcher are fed one callback another opts entitycatchercb there decoding function aware numeric well back top api input required imported two arguments argument type obligatory description string yes hopefully code plain object optional options see below its example key value default boolean fixed values normally put encoded set get raw characters instead which gives granular control output here every encountered entity will passed dedicated chapter used web worker setups pass gets called once each natural number meaning percentage work done far place array zero more arrays ranges what composable amendment instructions they containing from indexes range instruction delete would otherwise fall into replace with that note pieces deleted replaced using character four further processed other libraries cropping sorting merging straight notation those decoded only want full consider filtering library right after first filter then same skipping already recorded ent decode merge index above however need slightly different format issue titles via allows change concept receive ingredients under various keys whatever return pushed results result application about push call your findings neatly solve detailed their types name rulename suitable linters entityname just without ampersand semicolon case sensitive rangefrom shows where rangeto rangevalencoded fix should nothing insert rangevaldecoded relation even though might seem when does matter because serve both have non breaking spaces semicolons since give user option choose between come ways requested sticking missing pinged either progress package showing hard show minimal least how pinging side npm"},{"url":"/os/object-delete-key/","postType":"package","title":"object-delete-key","index":"deleting three modes delete pairs found any nested plain objects where equals equal certain thing doesn matter this library accepts anything input including parsed html which deeply arrays strings can feed into traversable will traversed searched your want that contain pair check out ast object back top api arguments are mutated package clones them first before using argument type obligatory description whatever yes tree array options see its key arrangement below default string find value massively boolean true should empty carcases left after deletion setting from both only set one values keys case means element meant used least must present accepted interpreted longer than zero characters insensitively above throw error relieve users having documentation output returns with requested removed example don also by didn specified when result would wildcards feeds inputs monkey doing heavy lifting turn matcher rationale libraries like node dropkey naïve expecting located according pattern expects always flat real life deal trees spaghetti expect how some then optionally get every within use email comb style tags without selectors class attributes inline css vs omit ok achieve same lodash right care about cleanup afterwards ask possibly leaving stumps inteligently everything upstream they re things although passing observe makes poof even though technically stump nothing actual finding besides being parent won clean conclusion different work consisting save time better because former specialised tool dealing"},{"url":"/os/json-variables/","postType":"package","title":"json-variables","index":"idea know sass variables declare once then use that many times did same json preprocessor which turns dry file with special markers are customiseable into normal like this program used production files hold transactional email templates content also allows automatically wrap resolved values chosen heads tails back top features notation arrays dots too instead keys dump data nearby naming pattern detects existing won twice battle tested manage api gives function below object references baked jvar inputobj opts other words main export takes two input arguments optional plain square brackets above mean argument type obligatory description parsed contents typically yes source work upon containing settings options key default string how want mark beginning variable ending definitely don wrapped boolean can put separate dedicated named similarly where placed your besides those will have different somehow suggest appending name tell here what optionally each one left called please right array strings any surrounded by matched given wildcards note zero more characters make sure does contain these already prevent double triple multiple wrapping global flip switch turn completely everywhere value only exactly throw mismatched marker error very first moment merged whole its permanently nothing else matters when there mix booleans empty just reference resolving intact setting relevant mixing cases resolve matter encountered retained objects get renderer happens set normally throws prefer missing putting resolves defaults place output returns thing passed valid types inside example pass outermost container return examples care our further check way own new pair using bake some java fine ensure closed loop otherwise ok deeper levels within dot containers wise looked higher level might appear clunky saving time scrolling out look clean arrangement hell convoluted nasty status therefore mashed together starts letter end being after sorting observe better isn think rely customise call hand via force current query path ignores ignore supplying their patterns challenge instance another both solution alternative always non them anything processed practice essential feature working structures need adapted front development preview build following shows html sprinkled nunjucks members jinja templating languages curly braces template dev everything looks basically redirects pulls title text prod version minimal overwriting keep process instructs ready far good add exist again language would something intention now notice because statement second solve keeping instruct skip often inactive modules marked they every false true mixes"},{"url":"/os/bitbucket-slug/","postType":"package","title":"bitbucket-slug","index":"idea bitbucket readme file headings are automatically linked with anchors this library generates those anchor links just case want generate table contents programmatically any given backwards engineered slug generation algorithm appears strip punctuation emoji non letter characters like hashes which mean markdown single space that follows them replace each chunk spaces hyphen deburr latin letters cyrillic hiragana katakana etc there rule two slugs can same function url starts append first repeated onwards only dependencies ent decode entities lodash convert basic back top competition whoever wonders slugify npm won match heading api peculiarities differ another hand aiming spec close possible our unit tests pinning output against rendered html usage simple out input string empty will returned"},{"url":"/os/array-pull-all-with-glob/","postType":"package","title":"array-pull-all-with-glob","index":"pulling let say have array strings another remove from aforementioned that easy achieve with lodash pullall however what are sure removed exactly look like know only how their names begin there too many them type manually yet same letters need elements able put glob search query string pattern which means any character here check out using this library needed email comb where had whitelist certain css classes removing back top api input argument obligatory description yes source zero more single plain object optional options see its below by way none arguments mutated checked unit tests group key default boolean comparisons case sensitive answer can override defaults one place copying when unused also passed value output"},{"url":"/os/easy-replace/","postType":"package","title":"easy-replace","index":"quick take this program alternative js regex lookaheads lookbehinds back top api other words string out function with three input arguments see them below argument type obligatory description yes original plain object settings replace findings missing library runs delete only mode won just options key array strings equivalent negative lookbehind these must present left plus any maybe order counted found contents are replaced deleted positive side together don fret keyword look right lookahead higher each mentioned above can set boolean optionally case insensitive same thing flag regexes output things examples simple example replacement recipe instances solution using setting every want ignore via maybes optional surrounding well there characters count part one by way notice how values arrays doesn accept create loop from outside then call many times search multiple will cover more surroundings cases match something followed else ones that have narrow down amount replacements preceded space another their occurencies character those front our sometimes like disregard curly braces make visible here they already add spaces before closing slashes tags where exist real life scenario semicolon ampersand random letter capitalisation"},{"url":"/licences/","postType":"page","title":"Licences","index":"external link icon re using modified version wikipedia which public domain loader party parrots cultofthepartyparrot com creative commons attribution sharealike international license eleventy starter templates borrowed some template structures from phil hawksworth eleventyone got awesome data wiring mit licence mattia astorino xity proper folder structure parcel back top other dependencies ty plugin inclusive language rss syntaxhighlight @babel core preset env @octokit @quasibit sitemap @tbranyen jsdom array shuffle axios countup js cross cssnano advanced delay cli markdown shortcode eslint config airbnb base prettier import unsanitized row num ha ours fuse html minifier jest linkinator lodash camelcase clonedeep luxon anchor implicit figures kbd matcher npm run map pacote bundler parse github url postcss variables color mix comment easy mixins reporter simple vars precss replace rimraf sass slugify string strip unfancy uslug what input write file atomic"},{"url":"/articles/string-strip-html-v.5-and-lessons-learned/","postType":"article","title":"string-strip-html v.5 and Lessons Learned","index":"exported function string out api awesome because simple problem happens later when want add more output example log with time spent alternative like locations indexes from package json could send message past ourselves would always return plain object never chummy keep switch between different outputs using options flags did previous versions today released end chumminess returned now why change what upon user request can everything removed need choose get containing cleaned considering gathered ranges used produce tag spotted html tags ignoring whitelist blacklist filtered plus some statistics new additions reports index detected syntax highlighting which contains whitespace corrections are meant applied onto handy perf investigations gui web apps migration instructions tldr grab key before destructure they re while takes into consideration this way ask program strip only then actually their even control over result use"},{"url":"/articles/evolution-of-our-npm-packages-from-a-readme-perspective/","postType":"article","title":"Evolution of Our npm Packages, From a README Perspective","index":"our npm package count grows readme automation becomes more issue installation instructions badges contribution guidelines can automatically generated many other chapters here story from perspective beginning first had handful packages folder with few subfolders didn manage anything each its own manually written md newer edit date nicer were experimenting adding features like there lots copy pasting risk that old bits could remain end published new level later discovered cli helper np mr sorhus idea genius hack away then release time comes trigger wipes installs fresh runs tests pass asks next version releases pushes git remote let loop by this around often releasing manual per thought what over folders call inside one did still though moment popped mind actually generate replace specific put script run created only config root plus have their settings approach different schlinkert which keeps contents separate file renders into added automating maintenance auxiliary files even example glance rollup monorepo conceptually lerna does three things us bootstrap dependencies dedupe lift them while integrating when fill changelog completely bump json once versions bumped re king calling won publish without will get excellent async runner pretty sure using strange ways solve technical challenges namely cohesion within ecosystem words code feature how check break down stream dependency wise tedious either symlink paste builds another restore they automated think bahmutov dont boundaries duplication sheer gluttony standalone again calculated gigabytes wiped downloaded laptop being much unusable burning fans duration whole hour writing weighing mb tiny size standards record warts too couldn use wrote linker nor go far means also updater deserves post through gitlab ci continuous integration terminal session spun server datacenters bunch commands repo sits internal rabbit hole pump build artefacts everything starting jsons internets rd person set are committed pushed during christmas couple spare weeks hand decided onto went successfully although accidental semver bumps because initial misconfiguration see current don data potential security issues secrets leak public save referencing user fantastic ports publishing servers day getting email pipeline failed got theoretically development done opportunistically bothering test suite locally happens breaking anyway moving very choice people share configs talk about setups assemble scratch took nail remember lindesay promise outcomes moved website indieweb principles your itches tools yourself selfdogfood document stuff open source ux design important than protocols visible humans machines second platform agnostic platforms plurality monoculture longevity fun owned makes sense updates warrant any programs repositories trackers allows treating documentation amends properly templates meaningful checks separating concerns outside raise tickets help update affect saas companies out quality assess suitable corporate shocked find excessive deemed sign low oops effort seeking perfection apparently harmful argument port provider general outdo github bitbucket easily proper dark mode auto full control images caching complete markdown rendering know eleventy plugins available walled gardens receive best possible treatment heading anchors toc smooth scroll anybody interactive charts playgrounds embedded iframes runkit mention usual css jsbin codepen improved page layouts cross selling linking hell articles tags banners wish owning hosting terms gives opportunities conclusion host program form codsen com keeping bare minimal exist contain link homepage future shuffle further seek deno service land treat equally everywhere final alternative straight cloudflare cdn bypassing contribute preventing fate consume dealing microsoft"},{"url":"/articles/our-dark-mode-setup/","postType":"article","title":"Our Dark Mode Setup","index":"conceptually dark light mode website driven by buttons ui whichever user picks attribute with that value gets set tag also persist browser local storage automatic setting listens system via manual modes css pretty much here mixin use these days postcss plugins can substitute sass dropping simplifies tooling there one part less setup pun intended process mixins variables like three auto are tackled this simple @include darktheme takes define alternative styling useful reference article although don native gist same instructions explain theme switching thoroughly against custom properties have their they exquisite solution when design sets colours swapped arguments favor style wrote parser ingest into nunjucks global scope allow us vars inline html will require another program dollar notation six characters type instead very relevant supported ie need extra measures example other hand rendered classic web development land decision make email while readily available back day data often put onto using attributes rather than more semantic bad habit fear tags"},{"url":"/articles/our-cache-busting-setup-on-eleventy/","postType":"article","title":"Our Cache Busting Setup on Eleventy","index":"cache busting necessary because browsers resources namely css js files update website visitors might see their latest versions theory implementing web workers should solve problem there are eleventy plugins that decided enable pwa setup until test properly here how bust old school way nunjucks parcel started this xity boilerplate gave headstart providing decent pipeline postcss using removed plugin ways essence generate file based unix epoch timestamp pipe assets subfolder named also use when templating asset paths need reference inside any from will then additional step run find replace script after build completes read proper explanation examples conceptually architecture addressability principle tells url identifies one only resource leonard richardson mike amundsen sam ruby restful apis given visitor browser caches example those distinguished another by two clones same different folders still flows takes turn into new change its why achieved changing can done three add unique characters name put uniquely folder parameters least works pre world third option seems easiest unreliable parameter get discarded anywhere journey sorry buster leaves us with options versus approach easier just sub during liner would involve either producing timestamped hashed names they re created possible come renaming them later ingestion tricky considering won event hook released yet time writing runs both complicated layers front hash vs consideration what random value easy terminal content each deployment cause treated even haven changed since last release hashes md contents drawback have per case length issue timestamps ten long initial went simplified huge does many things first outputs current root project probably previous gets overwritten contains our been written processing baking dependencies rendering mixins etc normal rendered located fires reads second copies where now placed html templates know write correct global data returns plain object which consume like deconstructed let go through npm piece ingredients scripts package json sequentially parallelly make work windows fair everybody afford mac triggered builds development version watches changes destructured calls following these commands above delete diy solution command configured configs doesn aware parallel writes being relevant some search worker unblock thread start kill keypress field simply speaking running pet separate cpu messaging between catch main needs give seconds text node scripting best people prefer bash perl few watch kinds marked cli flags never end thus block further chained append something trigger printed valid watching browsersync mode flag others other reasons chain watcher ran rule apply processes covered dev prod production similar except standalone renames wonder moment sees anything else than absolute process wrong means ignore force conclusion mvp minimal viable product continue improving source code open sourced feel free fork play around learn doing reading alone suffice"},{"url":"/articles/eslint-uses-similar-thing-to-ranges/","postType":"article","title":"ESLint Uses Similar Thing to Ranges","index":"noticed eslint also uses some sort ranges check api will return key string indexes are same they placed array only difference explicitly tells what insert using separate marked finding like this would mark shorter very similar"},{"url":"/author/royrevelt/","postType":"page","title":"Roy Revelt","index":"roy revelt ma msc director codsen ltd well rounded software engineer mainly working with javascript front end he specialises enterprise level email versed modern js ecosystem web development ssr react redux rtl styled components storybook etc his open source programs are downloaded million times per month september data bsc math teacher diploma vilnius informatics thesis project php postproduction york python before establishing worked jigsaw uk leading purveyors apple esp responsys now part oracle agency side british citizen since back top"}];

onmessage = (e) => {
  // console.log(
  //   `016 search-worker.js: received ${JSON.stringify(e.data, null, 4)}`
  // );

  // 2. Set up the Fuse instance
  const fuse = new Fuse(searchIndex, {
    // isCaseSensitive: false,
    includeScore: false,
    // shouldSort: true,
    // includeMatches: true,
    findAllMatches: false,
    // minMatchCharLength: 1,
    // location: 0,
    threshold: 0.2,
    // distance: 1000,
    // useExtendedSearch: false,
    ignoreLocation: true,
    // ignoreFieldNorm: false,
    keys: ["title", "index"],
  });

  const res = fuse.search(e.data);
  // console.log(
  //   `038 search-worker.js: ${`\u001b[${33}m${`res`}\u001b[${39}m`} = ${JSON.stringify(
  //     res,
  //     null,
  //     4
  //   )}`
  // );
  postMessage(res);
};

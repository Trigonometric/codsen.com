import Fuse from "fuse.js";

// 1. List of items to search in
// prettier-ignore
const searchIndex = [{"url":"/tooling/","postType":"page","title":"Tooling","index":"tooling njk contents"},{"url":"/ranges/","postType":"page","title":"Ranges","index":"invented term just fancy way describe arrays from string index ranges means delete characters replace with case marked by pass empty array will work too that there same indexes gives us flexibility process strings example detergent taps different packages one strip html another remove widow words they report operate source mutated previous operation end merges those processes rendering result approach old mutating over using regexes back top range libraries apply takes amendments described produces new see package push when want gather instead pushing them into can this helper class below automatic merging sorting also checks types acts like safeguard merge after any two vicinity have edge value sort sorts crop crops ensuring goes beyond given along regex matches returns which would thing similarly results yield others gladly accept ent decode wrapper market leading entity decoder he js tested hell out code directly dependency stream cherry unit tests were ported invert inverts offset offsets every within tells natural number iterate iterates already applied sometimes certain operations aren really composable traverse had final outside each gap between fed callback supply program makes life easier because did manually loop inverted chunk finally write alternatives rich harris rollup creator perform controllable manner oriented its produced sourcemaps are aimed browsers best used transfer amendment instructions programs discard some conditionally tweak processing complex similar generate comparison method equivalent"},{"url":"/trivia/","postType":"page","title":"Trivia","index":"codsen amalgamation code send meaning skill both web email development this website static follows indieweb principles own our data open sourced example won post medium now column rss are twitter use tooling here client work everywhere that selfdogfooding by way powering multiple nunjucks filters believe choosing right tool job matter project pet sometimes react vanilla js websites can still driven consumes dozen external sources without gatsby contentful only html css bit try search function plurality moved away from github gitlab place npm packages have examples posted automatically tested validated"},{"url":"/freebies/","postType":"page","title":"Freebies","index":"tbc"},{"url":"/os/ranges-merge/","postType":"package","title":"ranges-merge","index":"purpose after sorting any two ranges vicinity have same edge value like below merge them back top api other words this library gives function must feed array into its first argument also wish can second plain object bracket means optional returns new one more range arrays original input mutated type obligatory description yes zero meaning natural number elements each options see key default explanation boolean supply here will called given which percentage complete that moment values from finally main return result by touch they are joined set option stop handy when reporting separate issues place case want copy paste somewhere consider example notice arrow imagine instead could sit worker report progress then ping last whatever give with done far grab above your merging sorted pairs starting end merged becomes challenge what add third element saying replace characters string index something else let customise behaviour mode opts mergetype clashing insert always concatenated clash indexes latter overrides former aspects modes messed piece code say our imaginary cleaning program detected unencoded ampersand position malformed where duplicated wise look discard setting come except resolved deleting left keeping right order how got algorithm both vs came clashed wiping"},{"url":"/os/js-row-num-cli/","postType":"package","title":"js-row-num-cli","index":"use once installed call typing your terminal like this specify glob pointing some files too long can also type wired that alternative back top quick take updates each from because row re using are example put under flag specifying paths ⚡⚡⚡⚡⚡⚡⚡ what does first depends did path will process file expand into list didn just typed current folder where called look order src main js cli index picks statements replace chunk uninterrupted sequence numbers with number sits exampe there default padding three characters override see optional flags table below help troubleshoot code these days rollup builds standard having source es modules unit tests build types applications esm same umd minified browsers unpkg com common transpiled suitable older platforms now remove comments automatically when producing production during development skip removal way get goodness risk they spill api globally won pass any pattern patterns following priority globs catch folders specified them optionally options which match lets set statement would added still change console log function name update multiple command line have few rules want values certain value good bad escaping double quotes escape left slash nifty setup idea alias piggyback run often processed without hassle"},{"url":"/os/emlint/","postType":"package","title":"emlint","index":"notice emlint currently being developed please come back later"},{"url":"/os/ast-delete-object/","postType":"package","title":"ast-delete-object","index":"purpose deletes objects ast given keys value pairs are matched back top api other words function which takes three input arguments third one being optional marked by square brackets will mutate argument type obligatory description whatever yes tree object array can deeply nested key that should used match plain boolean ooo options see below way mutated any default supplied its were found target deleted now there could have been extra set both keysets well values when active empty would get med string might different matching strictly yet same defaults place output this library return clone first with relevant elements want search strict require exactly use example above because ignored unrecognised deal they usually lots white space often many contains only spaces tabs line breaks sometimes pretend those containing don exist deletion more aggressive regarding notice how look blank catches contain story originally program created help us delete unused css from parsed html email comb since then rewritten process code without parsing became faster magnitude milliseconds instead seconds minutes"},{"url":"/os/array-of-arrays-into-ast/","postType":"package","title":"array-of-arrays-into-ast","index":"purpose consumes array arrays produces trie like ast from them this library piece one experimental code generator ours back top api generateast input opts argument type obligatory description zero more yes source data put into plain object optional options see its below key default boolean skip duplicates here are defaults place copying when unused can also passed value output generate with settings setting will active duplicate paths won created now what happens turn notice how entries each branch were generally don reason why want there ever need principles every have inside that means tip continues simples compared vs libraries produce manage structures example datastructures js particular case problem structure abstracted behind access directly traversing nested tree objects would limit methods however recursively traverse node look down around where comes doesn abstract producing get which further process any way using vast ocean processing"},{"url":"/os/array-includes-with-glob/","postType":"package","title":"array-includes-with-glob","index":"how works lodash can tell does array contain given string among its elements this library supercharged version letting put wildcards wildcard means zero more unicode characters also fancy things like middle multiple will tolerate non values source skip those astral character friendly supports including emoji doesn mutate input query request that any default behaviour optional setting should found yield result see examples below back top api other words function which takes three arguments third one argument type obligatory description strings yes what look plain object options none mutated key value when first second have match performed two ways return true are only within practical usage very useful tackling objects example merge advanced certain keys upon technically may globs program processes above need run check through covered by would get merged keep their output boolean returns least else conditions throw error inputs missing wrong empty always"},{"url":"/os/regex-empty-conditional-comments/","postType":"package","title":"regex-empty-conditional-comments","index":"api other words function which returns regexp object"},{"url":"/os/js-row-num/","postType":"package","title":"js-row-num","index":"purpose updates numbers console logs that can know what happening which line every single package our monorepo relies eslint rule driven by this result from real life snippet detergent one test build terminal output notice front each logged statement casually deal with source files spanning thousands lines back top api other words function takes two input arguments second being optional marked square brackets options object key type its value default description zero natural number anything falsy sets how much digits will padded integer something have log contents already extracted row pass here multiple won recognised assume process boolean when enabled instead string program return ranges notation array more strings after first met chunks replaced unless letter normally expect whole given give activate flag place rules only within either case precedes agree should because letters precede quotes doesn matter double backticks long opening quote matches closing non characters digit touched lump onwards eol does support three types see unit tests under group don use put your name above used fourth padding like pad perform replacement are composable amendment instructions they arrays containing indexes example range means instruction delete would otherwise fall into replace there note pieces deleted using character upon request also final setting disable keywords nothing cases where empty kick processed sometimes programs processing code come just want extract update them option comes"},{"url":"/os/email-homey/","postType":"package","title":"email-homey","index":"use once installed call root your templates projects what does helps generate homepage with list email will expect that located within certain folder specifically scan subfolder names path give like example above go inside look copy into overwriting such file already exists replace word maintaining correct indentation this need able pull driven by vue js html script can query hard drive find node array table back top"},{"url":"/os/csv-sort-cli/","postType":"package","title":"csv-sort-cli","index":"call file appending your name with without flag like this back top omit will let pick csv offer list files current folder choose from can even try installing use what does exactly sorts rows correspond double entry bookkeeping principles sometimes internet banking have wrong order especially when entries are same date library helps sort correct bonus trim empty columns mention our custom parser used here ensure that cell contents trimmed there between content also accepts any commas wrapped quotes"},{"url":"/os/html-table-patcher/","postType":"package","title":"html-table-patcher","index":"idea when make email templates sooner later have add conditional logic around table tags this show that row another column result try preview html browser placed wrong place top making hard visually qa program patches structures creating cells needed placing code those templating literals are correct places helper tool campaigns back api package exports plain object with three keys first one value which main function second defaults third version taken straight from input argument key type obligatory description string yes zero more characters optional options see below its output returns name containing patched example put under per here default empty whatever will end every newly added td inline tag boolean should contents centered via attribute algorithm parse using then traverse record what needs amended finally apply changes go gui tap git clone repo your ssd into root where folder localhost server open get mini application driven by vue local copy internet also pacher don inside because virtual won source level above"},{"url":"/os/string-match-left-right/","postType":"package","title":"string-match-left-right","index":"purpose easy check what left right given string index api input there are four methods have same least one substrings match including character argument type obligatory description yes source work natural number incl zero where start looking this may used other two array strings should look particular side aforementioned anything found will returned especially handy when here pass way know which matched plain object optional options see below back top output returns boolean value that then first from elements key default case sensitive insensitive function feed called with remainder depends method others accordingly being result callback joined using logical operator calculate final use mainly whitespace set can before checked starts basically means substring begin end more each long similarly like remove any characters provide example useful checking tag names without closing slash levenshtein distance how many mismatch yield false enabled enforce must last defaults place ready copying often need only within also perform checks outside traversing want attribute traverse backwards catch equals enough because next space algorithm terms trims length apply callbacks cb stands receive three arguments depending second argment whole begins ends might come than third follows actions content notice element very important matching forget return truthy even would both comparison imagine forgot something thing inline relying sometimes beyond equal level run regex against let equation judge sine empty don error thrown normally receives gave instead order st nd slice rd strip html library known name opening bracket now allow dirty code cases after some browser patch able detect performed trimmed into by such scenarios rare strict tags locate trimming account slashes beginning ending since further eol nothing currently limited avoid interpreted real letters arrow javascript functions class citizens raw values still retrieve yet correctly consider letter while towards instruct skip unicode somewhat supported covers emoji comprise longer contains loops iterating splitting grapheme later performing operations think approach most performant choose less lines"},{"url":"/os/string-uglify/","postType":"package","title":"string-uglify","index":"idea this library takes array strings uglifies them into something like deterministic algorithm means that same input always results output our nearly because many class names compete shortened single character depending list slot may available when default two long clash third appended with less probability happening technically speaking want uglify such way replacing half classes uglifying again veteran values would stay practically can heavily edit your html unlikely there will reported git changes outside edited code areas example let minify css made nato phonetic alphabet being one then create another leave only fill other words both uglified result arrays consistently minified determinism back top features its api friendly errors are thrown wrong inputs won give empty fine put dots hashes don minifying id might omit dot hash reference does have contain unique entries just inefficient duplicates should aim avoid get three things uglifyarr returns copy given each string anything thing instantly returned more return type non those feed without see usage above uglifybyid clones element by requested arguments natural number index from position efficient called times time processes whole using gives instead assign variable query need version outputs semver straight key value uglification vs minification some people use term interchangeably different rename shorter case remove white space sometimes last semicolon integrated tool consider crush"},{"url":"/os/arrayiffy-if-string/","postType":"package","title":"arrayiffy-if-string","index":"purpose non empty string put into array return anything else just main prepare input argument options objects also check out back top api other words function which takes one competition mr sorhus slightly different casts everything example hand wraps only strings arrays bypassing rest depends what need"},{"url":"/os/html-entities-not-email-friendly/","postType":"package","title":"html-entities-not-email-friendly","index":"purpose unlike web pages email templates are sent over smtp need html encoded encoding can done three ways decimal hexadecimal named forms entities memorised recognised more easily than numeric ones when check template text informative somebody mistakenly put would tell stands out instantly only problem supported well across clients particular windows desktop outlooks this package tells which exactly widely what convert them program exports few different lists plain object key value pairs like total keys set entity names correct letter case size alphabetically sorted lowercase back top api with five name type raw decoded unsorted because have example natural number string length shortest currently hardcoded longest point decode among see means friendly should noticed ampersands semicolons missing values they re obligatory code add yourself sets awesome fast import must use methods etc array also idea that suspect its might messed match against now something found actions matching aiming exact your their give guidance how long short keep mind here does count ampersand semicolon characters practice allows detergent automatically switch between prioritising acccording competitor acid character converter uses mention eoa ignores invisible liability"},{"url":"/os/tap-parse-string-to-object/","postType":"package","title":"tap-parse-string-to-object","index":"idea this library basic raw tap parser string object aimed parse test output saved into files using existing parsers like are operations terminal they consume piped there return streams program similar except that works synchronously asynchronously depending what give will plain stream promise both cases look comprehensive won names extract totals asserts suites going use ourselves compile stats our unit tests back top api depends input provide receive whole with can big example around mb assertions reading processing such file would cripple even core intel laptop same easily processed however keep alternative peoples convenience maybe somebody just wants play doesn want guest synchronous result given put inputs yielding described above async promises real world scenarios preferred takes returns algorithm wrote own little essence counts lines when trimmed start ok condition those consecutive located after line which contains subtest each opening curlie brace bumps suite count exception chunks skip everything between three dashes dots"},{"url":"/os/string-remove-thousand-separators/","postType":"package","title":"string-remove-thousand-separators","index":"api remsep str opts first argument input will error second optional however present plain object back top options defaults key type obligatory default description boolean should remove thousand separators swiss style russian pad one decimal place numbers with zero convert separator commas into dots"},{"url":"/os/string-convert-indexes/","postType":"package","title":"string-convert-indexes","index":"idea native js string index system based grapheme count while length one emoji two character long because characters actually ideal world would that called letter cap are both graphemes this program converter converts between systems back top api exports functions indexes used let say input same argument type obligatory description yes which want perform search whatever normally natural number zero can numeric nested ast thereof"},{"url":"/os/string-apostrophes/","postType":"package","title":"string-apostrophes","index":"idea know straight apostrophes are always typographically correct should with right single quote instead apostrophe this program converts cases double plus primes sources used rules logic unit tests oxford grammar punctuation nd ed isbn butterick practical typography chapter back top api when consume package get two functions function its following input argument key value type obligatory description string yes which will process plain object put options here example output returned processed ranges applied array zero more arrays that were gathered produce gave result default settings would boolean html encode characters killswitch does nothing how tell returns each representing what needs done means replace chunk from index can use using those other words apply natural number where character need start given end override present provide called meaning much skip next opts offsetby offset needed bypass already fixed happens nested quotes fix many one go further processing otherwise multiple times bumped callback fashion inner bumps outer consider escaped there various have sentence just different represent them values going code symbol by instruct particular above evaluates surroundings normal suggests replacement practice uses compared others additionally replaces dom web page script regex based encoded content upon request allows any part commonjs es modules builds umd published npm available unpkg jsdelivr serves languages besides english out changes capabilities bundled because browser only possible targets consuming programs might even consumers electron whatever best write standalone apps like core work original"},{"url":"/os/chlu-cli/","postType":"package","title":"chlu-cli","index":"summer update long time passed since created this program our workflow evolved don use any more npm packages live monorepo gitlab deployment via ci automates versioning changelog updates re saying because normally programs following eat what cook principle indieweb how works cli app once installed call root folder where your sits default setting just silently does job checks fixes want some output with flag will say ok each writes successfully chlu both bitbucket github repositories stands ch ange og pdate should note that changelogs follow rules given by now tedious part diff links takes care them also have dates iso format between entries consistent title example these are main things updating back top features see above wraps version link brackets creates url footer adds missing intelligent enough detect existing their order repo data read create convert either based repository user account name set correctly per project from chosen wisely there available previous entry used real practice often many patch releases hence word notable changes merely calculated usually minor major would get caught skew picture released year month date try couple well known projects messed guinea pigs unit tests nifty setup idea unnecessary run manually mention might even forget suggest add one aliases edit bash config whatever using shell file contain runs doctoc exists then check lastly means always readme committed correct updated state dependencies checked"},{"url":"/os/ast-loose-compare/","postType":"package","title":"ast-loose-compare","index":"purpose find out does object array string nested mix subset equal another input this library will encounter two things that contain only empty report them are strings zero length arrays with more see previous item plain objects whose values keys example these deemed second argument can first one notice different type yet both space back top api other words function which takes arguments obligatory returns boolean everything from matches within otherwise there mismatch cases where inputs missing same key their differing they considered difference ast compare ours program differences ismatch partial comparisons match source against any value respectively lodash documentation positively bad when comparing parsed html css trees doesn reported non although something want comparison stricter ways towards equation check"},{"url":"/os/lerna-link-dep/","postType":"package","title":"lerna-link-dep","index":"quick take runs whole chain actions redundantly validating packages calling internet want within our monorepo that what this cli does example symlink created root object values equal node_modules detergent pointing expect updated are linked properly devdeps can set via flag back top supports your package from above symlinks will put one level deeper instead each entry json straight file ours following its git cloned wanted link another two would both same ps wonder happens normal main bin keys still work sets against according lerna documentation together dependencies other just by way people complain about issues board here well now those days gone have simple dependency linker last finest ingredients only ~dependencies~ used promise based run shell processes part bootstrap remind users currently installed outdated"},{"url":"/os/util-nonempty/","postType":"package","title":"util-nonempty","index":"purpose quick utility function able detect input empty want check non emptiness complex nested trees objects arrays strings like parsed html ast need library which can recursively traverse that there are two options strict see your definition everything string this includes tabs spaces line breaks example letters contains only space plain without keys zero length back top api anything boolean out"},{"url":"/os/lerna-clean-changelogs/","postType":"package","title":"lerna-clean-changelogs","index":"purpose this program removes frivolous changelog file entries generated by commitizen also api lerna clean changelogs cli back top other words function takes one obligatory argument string library deliberately decoupled from read write operations because might want put web drive application using whatever out most universal output plain object returned contains following keys key name value type description version present currently example gave input just cleaned algorithm package performs cleaning steps bump only that generates there can many reasons these will deleted along with their headings diff links change into need those don work bitbucket generally are noise remove turn them exception first main heading exampe notice how second hash character added beside link being removed replaces two more empty lines line itself leaves excessive whitespace bonus characters spaces tabs etc they re hard spot useless existing pre use dashes note list items updated match notation asterisks"},{"url":"/os/ranges-apply/","postType":"package","title":"ranges-apply","index":"purpose takes source string amendments described by ranges produces new back top api input argument type obligatory description yes provide array invert have sorted merged zero more arrays apply onto function something falsy callback report progress numbers will fed into program advances output returns amended check out push which helps manage methods add retrieve also cases where overlap maintain sorting order algorithm your given slicing accordingly meaning absence same returned main thing unit tests edge case scenarios fancy optional features upcoming like using character enumeration counting emoji one our originally this library part email comb traversed html compiled things delete replace later go performance important good idea spot because each deletion slowed down process instead then did replacement whole once appears fastest way re going use processing libraries who work without parsing"},{"url":"/os/ast-monkey-util/","postType":"package","title":"ast-monkey-util","index":"idea both use notation this utility program contains helper functions traverse paths conceptually identify node need then get its path from same callbacks amend that using set delete back top api takes string increments last digit decrements goes one level discarding two parts practically think always outputs array zero more plain objects each representing tag chunk text comment since root element those are digits ast child nodes nested within key value following html would yield many keys omitted thus with above first going mean splitting by dot into elements joining used based marked object want fourth there drawback can numeric strings advantage children now separated split quickly process unlike js square brackets"},{"url":"/os/object-boolean-combinations/","postType":"package","title":"object-boolean-combinations","index":"purpose need test detergent options want ensure that variations possible settings are tested currently asserts vast majority coming from generated by this library back top api other words function which takes two input arguments second one being optional marked square brackets argument type obligatory description plain object yes should reference keys will used generating combinations see overriding section below output program returns array objects sometimes override example only reduces above pinned thus reducing amount power essentially halving resulting count twice notice how having practice use perform specific tests js let say testing does encode entities correctly case arrays filled with first rest again here unit uses create then iterate through them each"},{"url":"/os/ast-is-empty/","postType":"package","title":"ast-is-empty","index":"rationale sometimes need check does given ast contain only empty structures strings those that trim zero length arrays containing more keys plain objects with this program helps back top api other words function which takes one input argument can any type returns boolean case non structure like"},{"url":"/os/color-shorthand-hex-to-six-digit/","postType":"package","title":"color-shorthand-hex-to-six-digit","index":"purpose best practice avoid shorthand color codes email example this program converts three digit hex inside any data structures strings objects arrays back top api input anything output same thing only with converted string will returned array plain object from within too unsuitable falsy things functions etc never throws error meant used by pass function usage gulp environment don need plugin can simply use library whenever get control final stream especially scss variables tap right after importing hope are misbehaving your colour one place coded recursive that nested matter how deep tangled character there nothing fix behaves well returning whatever given feel free assign sources"},{"url":"/os/string-character-is-astral-surrogate/","postType":"package","title":"string-character-is-astral-surrogate","index":"idea this program identifies high low surrogates specifically api comprises two functions ishighsurrogate char islowsurrogate reads character first index unicode code point evaluates its that there are more characters they ignored theory surrogate goes second source enables us detect related errors example malformed emoji parts back top same input zero where will evaluated output boolean empty string undefined returned anything other than type error thrown consists everything beyond return false make life easier when traversing check next doesn exist far astral ness concerned re fine yields otherwise have before feeding into library tedious level picky"},{"url":"/os/email-comb/","postType":"package","title":"email-comb","index":"idea this library removes unused css from html without parsing strengths aimed email development works everywhere where contained within same file external stylesheets accepts mixed with other templating programming languages broken incomplete invalid xhtml code both classes id optionally uglifies class names algorithm will cope style tags inside tag multiple can strip comments recognises outlook conditional specific features like removing empty attempts fix some issues example remove space doctype comb defaults version package json whitelist module backend heads tails red main box uglify false removehtmlcomments true removecsscomments donotremovehtmlcommentswhoseopeningtagcontains endif reportprogressfunc null reportprogressfuncfrom reportprogressfuncto log result countbeforecleaning countaftercleaning allinhead allinbody deletedfromhead deletedfrombody used opts externalclass hi data firstname db pt switch string price purchaseprice work fine static wired campaign non tool skips doesn understand back top"},{"url":"/os/json-comb-core/","postType":"package","title":"json-comb-core","index":"idea imagine have set json files helps maintain manage normalise those each object should same key missing keys added nested array there are plain objects within its siblings sake completeness let sort resulting too that need tools extract keyset enforce alert when unique can won yet some insurance would nice get our contain none other find unused jsons might normalised certain placeholder values every single means particular probably deleted back top this function produces reference according which consumes promises where promise resolve into once first start coalesces them one by schema technically speaking superset two rules level between different value gets filled with only merging done premise retain much information after possible api input argument type obligatory description resolving yes usually file contents optional options being synchronous see below ps normal full contains default any placeholders way minimise footprint make easy later fill from written straight because already equal output used really want suddenly switch async version sync reads normalises adding what asyc method zero more strings paths don necessarily sometimes falsy they such cases put here notation path boolean using turn areas template defaults kick defuse your false ultimate mode will kill incoming result clone null returns practically handy tame least ensure new example data mapping could validated through check parsed tells throughout whole customise via useful identify reduce size also help misspelt mark string turned anything name piece reported even leading either sorts matter how deeply arrays sorted does mutate fine pass js etc whatever copy created otherwise untouched returned containing something else thing difference normalising real schemas simple terms their types re concerned particularly about existence got match choose separate email content templates add field normally informed maybe pair across very anyway consistence normalisation process making bunch performing read internally algorithm knows however"},{"url":"/os/string-remove-widows/","postType":"package","title":"string-remove-widows","index":"idea this library takes string removes widow words by replacing last space paragraph with non breaking just adds want word prevention measures tackles both paragraphs single lines recognises existing found skips operation option encode html css js strings put raw does mangle line endings mac old style windows customisable minimum amount per trigger removal can used different stages workflow before encoding after optionally replaces spaces front kinds dashes within uk postcodes skip content between templating tags example nunjucks presets are given jinja liquid hexo hugo back top api features program out function decoupled from dom web pages ui cli terminal file system build those delivers three builds umd websites commonjs node applications es modules modern evergreen browsers too when get things which work plain object default options semver like brought straight input its following argument key value type obligatory description yes will process here optional boolean replace nbsp locations inserted encoded particular language choose enabled every whitespace two parts replaced natural number disables feature falsy thing count character array zero more list languages whose heads tails recognised skipped pinged each percentage done first normally reports percentages starting set custom arrays know where provide index ranges one place case copy paste somewhere output returns pick values returned processed calculated produce see format below decoding performed how could look about text ends inject via pseudo attributes also might prepared pasted into json allows customise target chosen analogue javascript minimal application would very often already contains literals snippet intend either say customer john don name run piece middle that comes chunks start ignoring stop manually template widest support once endraw opts tagranges sometimes contain didn go far code full tag recognition such duplicate libraries namely accepts known fact any black spots compared competition npm add remove hyphens prepare types threshold progress reporting worker apps what location necessarily have browser live page licence mit isc means core coupled network other unrelated operations makes easier test create many our competitor processing functions been end people who need use power these manipulation files piped streams express rest endpoint server serverless lambda aws electron desktop"},{"url":"/os/helga/","postType":"package","title":"helga","index":"idea this package will api universal code editor helper"},{"url":"/os/html-img-alt/","postType":"package","title":"html-img-alt","index":"purpose this program adds missing attributes tags tweaks existing ones attribute any tag will add one present run its contents through string unfancy decode html entities recursively case multiple encoding applied replace fancy characters with their simpler equivalents within ascii range example single curly quotes are changed into apostrophes includes dashes sorts double non breaking spaces regular empty replaced also normalise white space leaving between before closing slash xhtml bracket can turn by default image trimmed unfancie minuses that keep simple old email consumption software make easier qa them works fine both doesn touch slashes use separate library enforcing removing from singleton main usp does parse never error because dirty code might throw wrong input type something back top api other words function which takes two arguments second being optional marked square brackets options object key obligatory description boolean each processed here defaults place copying summer update our today understanding should enforced via linter during coding think web development consumer detergent evolved greatly since reasons stop us using package performance tools surely scanerless way process another round processing dry perf taxing reportability nowadays done ranges composable records where don mutate more than once whole opens many opportunities next generation apps js packages allow io app show only toggles applicable current processes text even reports would difference given ui uses info hide those applications re talking about"},{"url":"/os/object-flatten-referencing/","postType":"package","title":"object-flatten-referencing","index":"idea sometimes need make one nested object look like another type wise example got key whose value array have its string this library does such flattening back top api ofr plainobject referenceobject options returns new plain flattened according your supplied reference st argument obligatory first input which want flatten nd what rd optional third default description prepend each result simply other encountered append strings empty won anything keys that match given here applies child nodes well also them their used prevent mangling containing data storage can put wildcards zero more characters precise cousin exact path ignore remember after values arrays root equal take th element from second index would ignored boolean when objects are converted into separated by line break controls use html xhtml current already contains don wrap double wrapping variables set mapping various notations nunjucks some marked with obviously they get recognised whole wrapped let say state system variable heads tails turned joined between turn function completely using apply any these naturally either integer skip throw should merge handy email templates where statements hardcoded inside merging produce row contents will checked contain enforcestrictkeyset true name voilà"},{"url":"/os/json-comb/","postType":"package","title":"json-comb","index":"use once installed call terminal with list file folder paths using globs example back top api flags short long description normalise files given set gnore they contain only placeholder values abs instead default spaces json indentation shows ersion your similar this elp"},{"url":"/os/ast-deep-contains/","postType":"package","title":"ast-deep-contains","index":"purpose this fancy assertion match arrays objects where order doesn matter reference might have extra keys program really tries find matches had situation error come asynchronous fashion their pretty random yet want assert does array contain object another consideration that result don care example row column numbers vs notice how above bother with values well also note key structure very similar are wrong because rules were raised such way ava exact missing would issue tap set subset still able detect two solution package will try which most source then raise errors matching passed your chosen functions likely back top checking only here reduced based tests reported more than what compared throughout time when improving tokenizer surely add even new should affect main using nuisance update unit each after improvement done added contents our linter pluggable rule plugin architecture observer patten function emlint extending node class means nature somewhat undetermined check correct proposed string fixing index ranges fix input same yard dog cat about pets long one happy days behold flags backslashes void html tag first backslash deleted second turned into normal slash elements matched plus there superset re report information welcomed ignored cause api other words takes arguments argument type obligatory description ast can yes nested thereof being checked called pairs from path think see below exist callback message plain optional containing settings returns operated by callbacks options default boolean during traversal containers existence traversed further won pinged stop doing strict defaults place need copy consider these monkey test context paths get let repeat setting just they equal either output used exclusively through those job return anything"},{"url":"/os/generate-atomic-css-cli/","postType":"package","title":"generate-atomic-css-cli","index":"use once installed call typing your terminal like this how works place special placeholders config heads tails then also content will read from between expanded into multiple lines requested result placed instead existing means dynamic value default can customise range appending pipes end line yields see are inclusive values one two mean cli generate update any file html css scss whatever just put job done usually within comments block ⚡⚡⚡⚡⚡⚡⚡ back top"},{"url":"/os/ranges-regex/","postType":"package","title":"ranges-regex","index":"purpose takes string matches given regex returns ranges which would same thing similarly results case will yield merge others gladly accept back top api other words function three input arguments third one optional marked with square brackets argument type obligatory description regular expression yes provide regexp apply onto upon match want add every finding values put here output array zero more arrays called where each consists two natural number indexes can use features regexes global insensitive flags this package does mutate its inputs types are incorrect absent library error"},{"url":"/os/ranges-invert/","postType":"package","title":"ranges-invert","index":"api input argument type obligatory description array zero more arrays yes provide ranges invert have sorted merged integer number algorithm needs know length reference string calculate inverted last slice ending index plain object optional options go here output called where each consists two natural indexes this package does mutate instead creates returns new with back top key default boolean set true must only elements otherwise error will thrown example being would throw because well element checks performed handy cut corners perf reasons when are clean"},{"url":"/os/chlu/","postType":"package","title":"chlu","index":"summer update long time passed since created this program our workflow evolved don use any more npm packages live monorepo gitlab deployment via ci automates versioning changelog updates re saying because normally programs following eat what cook principle indieweb purpose main features see above wraps version with link brackets creates diff url footer adds missing links intelligent enough detect existing their order repo data successfully read will create convert either bitbucket github based repository changelogs user account name set correctly per project from chosen wisely there available previous entry used real practice often are many patch releases between entries hence word title notable changes merely calculated usually minor major would get caught skew picture released dates iso format year month date try them couple well known projects messed guinea pigs unit tests back top api input chlu changelogcontents gittags packagejsoncontents other words string out function argument type obligatory description yes contents plain object git calculate package json retrieve current output returns processed"},{"url":"/os/object-no-new-keys/","postType":"package","title":"object-no-new-keys","index":"purpose check does given plain object have any keys present reference returns array zero more paths notation example can used look rogue email template content json files back top api other words function which takes two obligatory arguments third optional input argument key value type description normally whatever case results will empty yes what work upon opts options output each element exist defaults default integer number choose mode see below modes this library strict comparing having assumptions about assuming that normalised by mean arrays children those objects same these mainly concern when both fewer elements there nothing compare first report are second anticipate get thing within should means only one algorithm identify always need give people chance use well maybe somebody find useful works with too competition could try missing deep won your inputs posterity quite wise run against flattened stringified schemas however support easy short cases parsed html ast higher end"},{"url":"/os/eslint-plugin-row-num/","postType":"package","title":"eslint-plugin-row-num","index":"setup first make sure itself installed among dev dependencies below means dependency opposed normal quick refresher when publish npm package somebody installs its don get they your that point separating both are program testing install them via flag back top some basics then need configure eslint use plugin know pluggable which reason why won over predecessors jslint jshint runs only rules asked warning levels asking configuration file have config yet can nip from another project tweak initiation script mind configs dot files hidden by system best practice visible now example following rule row set correct num comes report findings error level instructions add plugins section here real notice key reciting documentation different settings turn warn doesn affect exit code triggered put number without quotes string with same thing"},{"url":"/os/string-left-right/","postType":"package","title":"string-left-right","index":"whole idea trivial check something left right given index string that done what first non whitespace character either side need use loops trim functions calculate position also consider cases where there are such characters this program about value lookup helper back top api both exported have same str idx input argument optional second marked by brackets above starting look then report absence return determinator truthy trimmed must length otherwise these allow locate example output natural number pointing nearest ends further chompleft chompright two jump over certain repeated possibly spaced out with imagine located dot case lets text opts char can pass plain object options third omit modes before match leave single space possible stop alone aggressively chomp except newlines cr lf including works way just towards leftseq rightseq matches order particular disregarding tomatch square mean them type obligatory description yes work upon zero which start looking see below its sequence th put many want now gaps re reports any gap ranges encountered indexes leftmost rightmost leftstopatnewlines rightstopatnewlines besides they line break ps while mac ending backwards slash counts one more complex lookups matching"},{"url":"/os/html-all-known-attributes/","postType":"package","title":"html-all-known-attributes","index":"idea this package aims have most excessive list legit attribute names that can put into html currently includes deprecated attributes microsoft proprietary ones email templates use like other probably never seen before back top api exports plain object with single key its value set strings known humanity why array json because performance reasons previously ed exported now export hardcoded size evaluation speed faster according our built perf tests see folder root each monorepo"},{"url":"/os/array-group-str-omit-num-char/","postType":"package","title":"array-group-str-omit-num-char","index":"idea take array strings group those which differ only by certain number example consider this atomic css class names coming from some report output object key real life could have would shorter go there were let say other groups like npm library case producing notice replaced with wildcard because constant that grouped feature retaining digits reason why got into hassle see quickest alternative gung ho algorithm replace filter unique values lost need back top api words variable imported whatever function consumes two input arguments argument type obligatory description yes zero more plain optional options its below way none are mutated empty will give non least one string inside yield put keys they count integer default what use mark characters boolean contents deduped cost performance re sure your set here defaults place copying explicitly refusal custom can also passed value"},{"url":"/os/check-types-mini/","postType":"package","title":"check-types-mini","index":"purpose saves time options object validation expense your program perf back top idea imagine have library where let users set which comes one input arguments here challenge how check throw errors easily when wrong things answer this features use default enforce types supplement fully customise via simple schema error messages that show source even though threw them example typical generated by point save spent coding these checks debugging consumers api they try wrongly every will need some type user tinker with only drawback affect performance why many apps don validate values especially boolean ones other words function takes three second third optional main job are using can customised argument obligatory description plain yes after customisation used compare go key array string empty instructs skip any keys specified put strings given path notation style within similar thing above unique because simply names appear multiple places whereas paths value elements same reference want ignore certain pass must does arrays each overriding allows more precision enforcing message like include name calling parent numeric id variable called matter much nicer keep references consistent documentation defaults place common pattern define later plus enough allow provide matching alternatively just stick there allowed cloned onto from call mismatch sometimes accept either those somebody sneaks cases won anymore blacklist objects apply add into were new major version ast delete had update unit tests too previously settings change noticed missed their booleans ed alarm being raised good then came match would end wise feel free turn flag complex than single say what enter particular case insensitive come detect chai meaning literal nothing else usual also specific subtypes handy doesn validated please make typos first aimed npm package uses became aware js started remove strict level best friend needs help deep overkill unless care about"},{"url":"/os/string-find-heads-tails/","postType":"package","title":"string-find-heads-tails","index":"purpose there are many templating languages out each using different special markers nunjucks use salesforce mailchimp call those heads tails invented term because need distinguish between two this program finds where marker located given string will used json pre processing let any existing language back top context scanerless parser arbitrary few rules finding must sequence when one found new findings accepted into results until same goes opposite way both can supplied either single array strings prioritised by their order api other words function which takes four input arguments last optional marked with square brackets switch grapheme count based index system method convert indexes process whole output library argument type obligatory description yes want perform search more first half set example second plain object options see its below ps mutated key value default natural number zero start later only from certain here nd boolean anything wrong detected error thrown precede conescutive turn functionality turning automatically sets that won equal setting does concern types allow then processed throwing feature activated packages consume package dependency might rely some our ing since message mentions name ee override parent numbers arrays match pairs have long they pair inputs instantly yield would concerns checks before real work done controlled above place settings returns objects having format idea should able get put indexing unicode character slice libraries"},{"url":"/os/ast-monkey/","postType":"package","title":"ast-monkey","index":"context single html tag can parsed into ast see playground performs operations such nested arrays objects like one above back top challenge abstract syntax trees anything deeply are difficult main problem going branch querying parent sibling nodes second get very big quickly characters produced first often solved by putting circular references tree notice this way query standard json even specialised stringification packages exist what that dipped some went only tactical move nothing strategical program goes another uses indexing breadcrumb paths example traverse find node want index whole path being save down after traversal done fetch monkey delete bloody also use loop array check grandparent lots possibilities method searches using key value both known strategy size something have live with parsers don produce smaller from practice handy evaluate visually gui applications idea conceptually two systems our unique number based system each encountered numbered along integers know object notation instead dot marking powerful used many programs althouh shortcomings dots names function will report ways api search return indexes finding input argument type obligatory description whatever yes options below string least plain put here given default specify within any set either must present missing throw error validated via dedicated package util permitted values case insensitive interpreted longer than zero insensitively equal output comprising more following format integer last element found its parents starting topmost pair address out equals once iterate ing perform findings itself most versatile because go elements backwards numeric id would previously performed pick manually practically typically which performing then depending your needs write particular over piece retrieve returns matched list programmatically overwrite when replace same amended let say identified drop del chosen pairs keys selected deletion having setting acceptable table deleted long matches specifying match otherwise since won ues does matter arrayfirstonly ex versions foreach nan val innerobj null depth topmostkey current traversed contains purpose allow siblings name library called better considered strings really"},{"url":"/os/charcode-is-valid-xml-name-character/","postType":"package","title":"charcode-is-valid-xml-name-character","index":"what does returns boolean given character production xml spec human terms possible ending element this library used detect where html names end article contains depth explanation terminology helped get speed subject back top practice let say are iterating through string by code source will evaluate any tell valid name use most simple scenario characters example above mark ok know spaces equals allowed therefore their there more such oh yes quite lot according warrants proper dedicated only that purpose api two functions one check requirements first another second onwards both return function suitable st char strict than subsequent see below pass including astral into respond with acceptable consumes single can unicode comprising surrogates nd same bit permissive"},{"url":"/os/all-named-html-entities/","postType":"package","title":"all-named-html-entities","index":"idea this package exports plain object with keys key name value type purpose named html entities entity raw decoded total grouped by first character then second last both case insensitive function decodes format integer length shortest currently longest which could interpreted words malformed missing ampersand example back top api looks like point that don have iterate through match instead letter against list varies average tens strings long let tap imagine check there right string index given input empty does start end semicolon error thrown else performed found among known returned"},{"url":"/os/lerna-clean-changelogs-cli/","postType":"package","title":"lerna-clean-changelogs-cli","index":"use once installed call one two ways ps that dollar sign above just means terminal never type purpose this application performs following cleaning steps encountered removes bump only changelog entries generates example these will deleted along with their headings diff links from change into generator produces are universal between gitlab github bitbucket sometimes there bugs them remove turn exception first main heading exampe notice how second character added beside link being removed back top proof pudding eating here ourselves short ci calls package json script cleanses changelogs before npm published builds comitted git have look our yml line by way lerna clean cli can called because monorepo root dev dependency looks like then name could also instead more descriptive considering come after months wonder what such command"},{"url":"/os/ranges-push/","postType":"package","title":"ranges-push","index":"purpose when want gather ranges instead pushing them into array can push this helper class example below that gives us automatic merging sorting also checks types acts like safeguard back top api package exports constructor with uppercase which call using create instances lowercase your contains methods get set values provide optional options object creating key type its value default description boolean added string rd element range only whitespace empty replace either line break there least one single space other cases same applies have surrounded by will replaced number maximum consecutive breaks allowed collapsed result practically setting would allow blank lines output between paragraphs mode concatenate clashing alternative newer overwrites older see detailed explanation validated check mini please behave settings match should any extra keys defined naughtiness cause error know strict prevents misconfigurations helps identify some errors early here place case ever copy then interact newly created calling are sorted first pairs starting from end merged last two becomes challenge what add third above saying characters index something else let customise behaviour opts mergetype insert always concatenated clash indexes latter overrides former aspects modes activate resolved according rules str alias input argument obligatory integer natural yes beginning slice ending delete put new don anything both arguments wrong overload providing fourth fifth too safety because might flag happening code essence behaves ways later extend save time prevent bunch connecting being recorded separate ones exact extension previous method clean read additionally merges completely overlaps another superset larger wipe out subset smaller use thing current fetches state sorts outputs arrays still nothing been since second merge overlap theory does mutate our memory could more again possibly slightly different however aware lose data imagine became now apply amend discover left wanted trouble amended stick original desired conclusion complete operations ing fetch master once feed point really process got everything start sets right after yield scratch newranges existing iterating through adding simple yet psst those originally library part email comb tore placed needed function html img alt detergent uses unit test wouldn take hour calculating possible combinations while mutated loop"},{"url":"/os/generate-atomic-css/","postType":"package","title":"generate-atomic-css","index":"api three methods are exported name what does genatomic main function which generates css version exports from package json example string headsandtails plain object with heads tails extractfromtosource extracts source rows separated by pipes back top input takes two arguments optional options str originalopts goes into second argument here keys their values key type its value default description boolean should config repeated wraped enabling this enables well enabled already generated wrapped numbers padded override can hard set outside handy when contains old wrong worker setups provide will called each percentage done then finally result natural number ping unique progress once per percent skew starting counting starts zero one place case want copy paste somewhere output where under format tap like comes straight purpose serve single truth names internal reads line separates above rest challenging part that wrapping plus there only end how use idea basic level turn within range instruction means generate inclusive re happy start put custom happens edit list change ranges add remove rules need recreate original recipe lines help observe setting your placed content furthermore generator detects placeholders wipe existing contents replacing them newly able keep master email template regular comment deploying production still later could reuse"},{"url":"/os/ast-contains-only-empty-space/","postType":"package","title":"ast-contains-only-empty-space","index":"purpose working with parsed html always battle against white space this program tells given data structure empty containing only really by way weird things which don belong structures functions example will yield result back top api input anything output boolean library does mutate arguments"},{"url":"/os/csv-split-easy/","postType":"package","title":"csv-split-easy","index":"purpose split string representing csv file into array arrays that can traverse later acceptance criteria should accept with without header row might have different amount columns than rest rows content offset from there various line break types whatever ignore any values wrapped double quotes interpret commas part value empty fields output them strings automatically detect dot comma remove thousand separators digit only cells minimal dependencies unit test code coverage ways per branch statement function outside scope trimming leading trailing space just use parsing numeric parse yourself this lib sorting entry accounting see back top api input other words which takes two arguments second one optional marked by brackets out same numbers too are set options object key type obligatory default description boolean swiss style russian pad decimal place zero convert separator dots here returns each depicting when nothing given always within main something least algorithm files especially ones assume don want parsed means conventional splitting libraries would inefficient because after clean requirement column support mixed metro bank used produce these banked third requirements mentioned above pretty much rule regex based algorithms need possible check wrapping first best single loop traversal detecting ing worked very well email comb where unused css html template around times more characters travelled traversing also img alt needs through fix tag attributes crap"},{"url":"/os/eslint-plugin-test-num/","postType":"package","title":"eslint-plugin-test-num","index":"purpose giving unique number each unit test allows us find quicker compare vs example here real life terminal output tests tap runner can quickly identify by used descriptions only means would way harder their location notice there were above back top idea let put identifier title message this eslint rule which automatically updates those numbers setup see our current config first make sure itself installed among dev dependencies below dependency opposed normal quick refresher when publish npm package somebody installs its don get they your that essence how differ both are program testing install them via flag some basics then need configure use plugin know pluggable reason why won over predecessors jslint jshint runs rules asked warning levels asking configuration file have yet nip from another project tweak initiation script mind configs dot files hidden system best practice visible now following row set correct num comes report findings error level instructions add plugins section key reciting documentation different settings turn warn doesn affect exit code triggered without quotes string with same thing ps check out where exactly did came especially relevant rollup programs ran against source originate"},{"url":"/os/is-relative-uri/","postType":"package","title":"is-relative-uri","index":"background easy validate absolute url harder relative spec wise least theoretically these are also fine see wikipedia more considering base uri following would get resolved accordingly back top validating them saw can pretty much anything including empty string random letters like what only thing left try catch bad patterns conceptually this program tells given messed from perspective pattern far our imperfect algorithm sees mainly whitespace repeated things tripple slashes double question marks dots after hash two must followed by letter others api input other words function which takes options plain object argument type obligatory description extracted value html attribute css media query without opening bracket optional go here error will thrown key default boolean should yield with scheme example output returns clone similar schema flagged via always either message false happens checking set distinguish were there real errors when values one use libraries check strict those superb package search schemes falsy result detects known another challenge same that seemingly correct have"},{"url":"/os/string-remove-duplicate-heads-tails/","postType":"package","title":"string-remove-duplicate-heads-tails","index":"purpose let say know that variables are wrapped with heads example tails this library detects deletes redundant around whole input string also smart legit edges exclamation turned into what mainly about being able detect outer currently wrapping single chunk text those from separate chunks lib removes leading trailing empty clumps without space can configure whatever like array them length different your given set back top api other words function which takes two arguments second one optional argument type obligatory description yes source upon perform operation plain object options see below its will key value default non more strings put here way mark beginnings endings these double curlies nunjucks jinja many templating languages favourite output returns"},{"url":"/os/string-collapse-leading-whitespace/","postType":"package","title":"string-collapse-leading-whitespace","index":"purpose this program aimed process strings before concatenating them collapses leading trailing whitespace any that later result looks reasonable example uses merge inserted chunks string back top api other words function which takes two input arguments second one being optional marked by square brackets argument type obligatory default description yes undefined source work natural number zero contains linebreaks will replaced those count limited value first just returned untouched falsy set application continue normal output more characters same without error"},{"url":"/os/object-merge-advanced/","postType":"package","title":"object-merge-advanced","index":"purpose like lodash correctly merges different type things behaves well when encounters nested parsed html lots arrays objects strings imagine merged identical keys two judging their values by hierarchy instead non empty array trumps below plain object string number boolean doesn trump anything idea strive retain much datum possible after merging example better with than there are plenty settings mainly aimed templating needs can tap callback override result any way that what this library does will recursively traverse each key compare exists only one goes straight into both got clash value chosen its which numbers booleans won have they get fed back again using logical within those smartly depending keysets similar separate elements ten combinations types first input second full large centre square shows prevails diagram above squares show gets assigned merge marked pink fields sky blue some cases perform custom actions passing main function pay extra attention options present contents taking special measures composition mention overrides put overriding check unit tests see action top practice use humongous json files house our templates data must overwritten ones such also small where suitable filling missing doing other operations coming from api words takes three arguments third being optional argument obligatory description yes normally literal whatever else work too deeply thing something optionally pass default allows intervene right before returned gives suggested return controls dedicated chapter these kept changed wildcards overwrite counterparts matter contain resulting setting set another many handy defaults structures anywhere always unidirectional concatenate go intact final added don exist option dedupe should used conjunction really ensure contains unique calculated them switch former dealing content driving email latter vs order yield explicit false turn incoming good without need wrapping conditionals concat operation parameter items contained force hardarrayconcat here place output probably same your inputs mutated very important name matters call anyway variables wish clashing comes named position row algorithm already decided would were variable arbitrary location info about names paths plus parent details table remember either rd arg because otherwise written particular fourth definition path therefore applies sides whose usually sometimes might want able distinguish belong th then just powerful could pretty listed higher returning others every case bigger hard meaning keeping normal rest inside wrap double curly braces kindof consider null traverses easy make sure substitute let say regular except certain concatenated fine overwriting illustrate deeper how insurance accidental sets least notice sits safeguard differences difference stuck mismatching neither ast nor deep recursive existing weigh happily placeholder template builds import scss file overwrites global colours per needed now re vast majority customisation background done real means receive css"},{"url":"/os/array-of-arrays-sort-by-col/","postType":"package","title":"array-of-arrays-sort-by-col","index":"purpose sorts array arrays by any column default first element zero th index algorithm tailored integer only values consider this arrangement js code that sorting against result would output rules when compare two rows particular then are equal look around those left side right even there ripple outwards accept normalised into matrix with absent value fillings set same behaviour back top api input other words function which takes arguments argument type obligatory description more yes source data put ast natural number like string should match subarrays each sub sorted"},{"url":"/os/codsen-parser/","postType":"package","title":"codsen-parser","index":"notice currently being developed please come back later"},{"url":"/os/object-set-all-values-to/","postType":"package","title":"object-set-all-values-to","index":"purpose take any input nested array plain object whatever really matter how deeply walk through recursively find objects assign their keys given second argument default does mutate arguments operations are done cloned needed this library overwrite values json schema that later when copy from key value pairs equal don need prep them further well tested being used commercial projects back top api other words function which takes two both obligatory type description yes ast tree can hopefully contains some found output same thing gave first except with overwritten where applicable"},{"url":"/os/string-process-comma-separated/","postType":"package","title":"string-process-comma-separated","index":"purpose imagine need extract validate html attribute values first algorithm idea seems simple real life proper extraction quite complex cover error cases there might surrounding whitespace spaces after comma ok plain errors like leading non space characters that look nbsp this program helps chunks strings from potentially separated list string single value without commas separator configurable via wish are pinged separate callback function back top usage same thing use callbacks which allows tailor what happens with gives here contrived example too crazy shows capabilities instead expected have above extracts both index ranges fed reports rogue tabs breaking saves time having tackle those possible separators consecutive api processcommaseparated str opts other words takes two input arguments second one being optional marked by square brackets argument key type obligatory description yes object options see below its supplied any types will empty thus fine exit early main must pass default integer falsy where does chunk start end handy when been given cropped want report indexes offset adds number each reported boolean beginning range can split into character ping extracted place output return anything returns precise cb set arrow could normal declared well passed position call whole assume already didn give traversed would your full code omitted brevity anyway strictly speaking don expect something matter grab things way our errcb similar only message array zero more arrays indicate fix recipe about quick primer three elements match third present means add element deletion replacement made processing libraries whatever take them returned discarded sometimes keywords then allow between media queries setting doesn inner within turn"},{"url":"/os/ast-monkey-traverse/","postType":"package","title":"ast-monkey-traverse","index":"idea walk through every single element array key object string given input use familiar callback function interface just like api inner method meant used by other functions does actual traversal ast tree whatever gave from simplest most complex spaghetti nested arrays plain objects this ~method~ via similarly very important return value point marked above because otherwise will written over current piece being iterated want delete back top innerobj when call get four variables set stop currently traversing going each pair elements type description integer number zero root topmost level deeper increments path uses exactly same notation popular package example would take st index second row since indexes start are deep parent traversed whole which contains its purpose allow query siblings either includes etc stopping here how let gather paths first way dots too instead were gathered now make monkey notice there more after only compared can amend matters what within read reads see future nodes reports report many upon request personally context linting parsing tooling re don need mutate yet next order patch errors"},{"url":"/os/object-fill-missing-keys/","postType":"package","title":"object-fill-missing-keys","index":"purpose this library fills missing keys plain object according supplied reference driving json comb core method back top api fillmissingkeys incompleteobj schemaobj opts other words function which takes three input arguments third one being optional marked by square brackets are mutated inputs cloned before used that important argument type obligatory description yes can have nested values schema contains desired set hold arrays things options see below its key value default anything boolean only combination with means compare children contain placeholder won patch your objects performance reasons always make sure usually array zero more strings handy activate ad hoc data structures limit bloat when filling setting there existing get assigned even would otherwise something under bonnet same named merge advanced lengths files sometimes some either very large trees they rarely those cases want manually trigger normalisation done way find out path normalising notation following put name element id example skip into ignored falsy using just re custom different will start comparing branches fill what structure during any given paths placeholders normalised truncated provide don supply explicit completely diffuse incoming truthy ultimate turn usual rules merging apply null towards bottom priority scale gets trumped nearly every mention non empty how works performs creation part operation file making here slots process first take two normally originating from contents then calculate them superset possible across finally go through second time generated optionally like creates alternatively use add mind expected equal happens merged over come right places having written onto previously kept insurance took overwrote understood normal schemas anyway such waste resources"},{"url":"/os/ranges-iterate/","postType":"package","title":"ranges-iterate","index":"quick take iterates characters string given ranges were already applied sometimes certain operations aren really composable want traverse had final result back top api other words this library gives synchronous function exported default must feed three obligatory arguments fourth optional marked with square brackets input argument type description yes are operating zero more arrays gathered far something falsy callback able consume indexes character values index natural number can cut corners start later"},{"url":"/os/json-sort-cli/","postType":"package","title":"json-sort-cli","index":"use once installed either call with file name folder list thereof without flags same thing wired both see api section help via cli back top short long description don ignore any ode_modules folders package lock json abs indentation how many spaces tabs default tab when output shown only exit codes determine success failure also sort arrays they contain string elements shows similar this elp ersion your skip files paths does nothing exits non zero code could sorted needed put version desired flag before after path example these commands below are what exactly sorts deeply that matter plain object within array objects deep will detected tool processes disable first alphabetically then npm arrange keys according commonly agreed format depedencies bottom etc parsing type application written prettified tabulations whitespace fixed arbitrary order leave setting indent using two one used under bonnet uses ast monkey traverse extra features by works dot parse able can process set wildcards broken stop other healthy from batch still notifies user system like processed worry about excluding them input ci mode won amend calculate result compare contents sorting would make difference basically scripts fail unsorted thanks widerin idea feature write another"},{"url":"/os/ranges-crop/","postType":"package","title":"ranges-crop","index":"purpose crops ranges ensuring range from array goes beyond given index along way will also merge sort back top api input argument type obligatory description zero more arrays yes provide invert have sorted merged natural number algorithm needs know length reference string calculate inverted last slice ending output called where each consists two indexes this package does mutate creates returns new with cropped"},{"url":"/os/ast-monkey-traverse-with-lookahead/","postType":"package","title":"ast-monkey-traverse-with-lookahead","index":"idea original had means edit ast couldn give next few values that are coming only saw current thing traversed while working found don need editing functionality perf win see what nodes instead bloating slowing down decided create alternative flavour this program back top api function traverses tree given first input argument use via callback arrow below example similar way unlike read return anything inside can delete change when call like get four variables set stop traversal currently traversing plain object going each key value pair will array through elements element type description integer number zero root topmost level every deeper increments by string path uses exactly same notation popular package would take st index second row since indexes start from very deep parent being whole which contains its purpose allow query siblings either includes functions arrays etc more representing arguments reported looking into future point able otherwise re using vanilla request how many sets want have third now populated with upcoming consider didn lookahead default simply pushing inputs notice above empty reporting one requested stopping here let gather paths marked dots too were gathered make monkey there after affected does matter happen right place why aimed used enable parser patch errors sees something wrong needs node decision missing rogue should skipped normally people mutate note perform operation outside other hand deletion feature impacts performance made"},{"url":"/os/email-all-chars-within-ascii/","postType":"package","title":"email-all-chars-within-ascii","index":"idea traverse string check characters are suitable bit encoding other words within basic ascii range first does include any invisible control don want anything below decimal point except ht horizontal tab number lf new line cr carriage return often del overlooked yet right your templates especially email that sense non regex likes dangerous validate template code because they too lax also error lines exceed permitted length our algorithm will earlier more than consecutive lr lengths count end which two extra reach back top api str opts function second input argument optional marked by brackets only program options object else plain traversed when unacceptable character encountered thrown sanitised types mini set keys wrong add unrecognised thank later here defaults one place key type obligatory default description boolean should append front each message turn like cli app throws between spec says maximum total text including usage practical use re going this library part final qa theory html encoded have outside etx practice depends server what using deploy emails quoted printable base encode however prepare worst deliver ready conforming beyond ps acceptable out version can install globally terminal"},{"url":"/os/string-trim-spaces-only/","postType":"package","title":"string-trim-spaces-only","index":"api other words function which takes two input arguments second one being optional marked by square brackets argument key value type obligatory description string yes want trim some way plain object options see below its are supplied have any types error will back top default boolean set trimming becomes same should carriage returns cr line breaks lf tabs spaces raw non breaking here place output since name zero more characters result after array arrays trimmed anything each slice range added into this sometimes need just ranges what would merge them compiled process later along everything else those cases use worth substitute performance reasons"},{"url":"/os/string-find-malformed/","postType":"package","title":"string-find-malformed","index":"purpose need program help find malformed string instances example consider opening html comment tag code dog dot definitely instance str refstr cb opts stringoffset maxdistance ignorewhitespace true bde abcdef slice further ideas nobody would mistype owned ewned fat finger errors occur vicinity keys this case can mistyped with because those are near key far unrealistic light levenshtein distance strictly suited alternative version should written where algorithm considers both neighbouring evaluates accordingly"},{"url":"/os/ranges-is-index-within/","postType":"package","title":"ranges-is-index-within","index":"purpose tells given natural number index within any ranges wrapper top back api input argument type obligatory description yes re checking array zero more arrays null example plain object optional options see below its wrong will cause key value default boolean that consider range answer set would instead result return matched still used negative handy when want know which output answering question found positive simple encoding using settings algorithm tried binary search native are around faster"},{"url":"/os/csv-sort/","postType":"package","title":"csv-sort","index":"purpose sorts rows correct order that follows double entry format trims empty columns called trim later releases would like able recognise fix any offset caused by misinterpreted commas values string some sort spatial data back top api input other words function which takes one argument csv contents output plain object type description array arrays each containing column value this application outputs messages here can either similar icon hypothetical ui anything else than will key equal"},{"url":"/os/string-split-by-whitespace/","postType":"package","title":"string-split-by-whitespace","index":"purpose when enough example need exclude certain substrings this program will help splits string by whitespace definition being anything that trims zero length tabs line breaks cr lf space character raw non breaking there are quite few unicode characters across whole range api other words function which takes two input arguments second one optional marked square brackets argument type obligatory description yes source upon perform operation plain object options see below its back top key value default array more arrays feed slice ranges natural number indexes like algorithm include these index results can empty contains else then inside error thrown output returns strings yields some basics first say heads tails mean templating literals wrap frontal part ending now imagine extracted know their select from front hi where each head tail starts ends numbers match want split into skip those become handy used library find extract variables ignore including variable names reduce adapt format only examples with turn our"},{"url":"/os/ranges-ent-decode/","postType":"package","title":"ranges-ent-decode","index":"purpose this wrapper top market leading html entity decoder he js which returns ranges instead string tested hell out code directly dependency stream cherry unit tests were ported pass back api other words function takes optional options object input argument key value type obligatory description yes text want strip tags from plain see below its any arguments supplied are types error will output array one more range arrays completely matches default boolean entities decoded they attribute values read here that can cause parsing errors place case ever copy whole algorithm biggest pain main usp library being able recursively decode give result by mean over until there difference between previous last decoding practically means tackle unlikely possible cases double triple encoded strings example original dash turned into first encoding round then during second ampersand got lead instructions what change order don lose character indexes turn gather join them later where encode wonder need when traverse each ~code point~ grapheme emoji length six should counted through compare before after two different create new simple because processed iterate care about unicode astral characters"},{"url":"/os/gulp-email-remove-unused-css/","postType":"package","title":"gulp-email-remove-unused-css","index":"example back top options since main purpose this library clean email html needs cater code specifics one them that css styles will contain fix hack meant software here are few obviously using above classes id your what means they would get removed present only avoid pass whitelist key value array can also use glob order simply next level start overgrow plugin baby shirt want work with directly string stop api gulp idea following everything flows vinyl buffer streams tap stream convert perform operations then place wanted come visual analogy waste pipes thought rather won wise there many benefits tapping npm packages without plugins add more functions wrap over conversion happen once each those did their conversions less efficient yes should adds complexity same worse maintained than which drive often latter case might misconfigured fail even though package fine bigger surface test maintain report bugs just regarding removing unused from web pages competition used any where external stylesheets javascript could remove dynamically quite rare find page like newsletters aimed cleaning website perfectly well both markup language need advanced removal tools check out uncss runs headless browser capable parse however by magnitude slower definitely overkill direct competitor postcss uses cheerio tied outside its testing dependent other hand wrapper comb tool independent reads outputs core functionality decoupled wrappers posthtml grunt font end interfaces anything else past detergent front doesn while does important because some hacks based causes view toolbar menu link appear outlook style must recognise white list"},{"url":"/os/is-language-code/","postType":"package","title":"is-language-code","index":"purpose this program tells given string valid language tag based rfc tags identifying languages which released jan still current are used many places example html attribute impossible properly match spec using regex only can validate that allowed characters meaning those have position subtag arrangement matters also returns explanations why deemed input wrong because contains two region existing solutions like ietf don much logic besides enforcing order length reports any longer than other hand each value against known iana registered names back top api words function takes theoretically optional empty negative answer will returned liberal doesn throw errors plain object key name type description boolean answers code explains what non inputs always yield does case sensitive there exist conventions capitalization some subtags they carry performance reasons references uses lowercase even entered uppercase would get reported posix by way replaced with won include similar included following codes been added nothing later ug uigur iu inuktitut called eskimo za zhuang he hebrew replacing iw yi yiddish ji id indonesian"},{"url":"/os/is-char-suitable-for-html-attr-name/","postType":"package","title":"is-char-suitable-for-html-attr-name","index":"purpose function which validates strings first character suitable html attribute name see official spec names back top api input other words takes one string argument key value type obligatory description yes evaluate this program does throw just returns longer than its used zero length yields same like non values output boolean erroneous arguments will yield well ps need comprehensive list possible check out"},{"url":"/os/ranges-process-outside/","postType":"package","title":"ranges-process-outside","index":"purpose processes string outside given ranges each gap between will fed into callback supply same like this program makes life easier because did manually have invert loop over inverted chunk finally write unit tests that back top api other words function which takes arguments input argument type obligatory description yes source array arrays indexes these processed provide boolean by default checks are performed upon inputs can turn boost performance operates fashion just example above arrow following index natural number zero starting programs pings ending something falsy bump see below more inside gives call with single instruct outer skip many characters one character third lets looping way being pinged detergent html code bunch invisible detected their from pushed gathered while processing further avoids booked deletion marked uses work everything locations now detects named entity once stumbles its first ampersand does what needs skipping action here passed module imported file nearby processcharacter js initiate any taking than length crlf line breaks encoded entities"},{"url":"/os/ranges-sort/","postType":"package","title":"ranges-sort","index":"api other words this library gives function must feed array into its first argument also wish can second optional options object bracket means input type obligatory description yes zero more arrays meaning natural number ranges elements each plain go here example does mutate inputs theory javascript could arguments only they are primitive back top key default boolean set have two otherwise error thrown being would throw well element given will called with percentage total work done approximate used worker setups output sorted sort by child range then whole one place defaults case want copy"},{"url":"/os/codsen-tokenizer/","postType":"package","title":"codsen-tokenizer","index":"notice currently being developed please come back later"},{"url":"/os/string-extract-sass-vars/","postType":"package","title":"string-extract-sass-vars","index":"api other words function which takes two input arguments string optional options object above those square brackets mean argument type obligatory description str yes process plain see below example typical this program back top key its value default boolean extra insurance can set throw didn extract any keys enabled by put here each are defaults one place output returns zero more sass file pairs production have many things worry about imagine something went wrong with your scss variables mangled else would find yield empty notice know that there will always least extracted source error instead silently yielding option disabled think middleware pass then before placing into result feed use gives opportunities values turning digit hex colour numbers email friendly what doesn quick parser files simple pair style content fully fledged code please fancy bits nesting partials modules mixins extend inheritance operators why need sometimes want css inline html styles depends templating engine case nunjucks load variable global environment gulp eleventy script runs everything node read postcss containing line outout parses extracts after rendered conceptually allow us dry single truth constants react component based web development storybook documented similar thing just globals won them both template logic calculations column count"},{"url":"/os/string-extract-class-names/","postType":"package","title":"string-extract-class-names","index":"api other words function which takes two input arguments brackets mean that argument optional back top type obligatory description inputstring string yes process returnrangesinstead boolean default return arrays strings selectors optionally array ranges by slice elements where both match first use extract css class id names from html library email comb detects deletes unused styles"},{"url":"/os/string-strip-html/","postType":"package","title":"string-strip-html","index":"features adds removes whitespace make output presentable tag pairs along with content inside handy works broken partial incomplete non valid html mixed other languages because does parse can used generate email text versions puts url links detect skip false positives example enabled by default optional recursive decoding nothing will escape back top api input words function which takes string options argument type obligatory description yes want strip tags from plain object see below its arguments are supplied have any types error return here key name value where ranges were applied array one more arrays containing index characters deleted that would another found put zero each pair get values only ended stripped reported into account unlike above keys strings these removed names given else something falsy opening closing including between set turn include boolean escaped entities recursively decoded before stripping don need mainly automated setups ensures spaces trimmed outer edges customise link enable feature also location wrapping gives full control lets tweak dedicated chapter validated please take care what pass place case ever copy whole using compatible range ecosystem libraries like behind scenes this program operates result rendered time returning instead single split over multiple json paths those cases joining breaking intended often placed around normally treat surrounding rogue setting allows us distinguish two imagine stitch sentence out three pieces chunks added your templating engine now quite large there risk wrong places client asks ensure never lines remove space template move data level hard code after know library trims always settings particular either even better use detected still aggressively when outside algorithm stop first character turned notice how retained opts dumplinkhrefsnearby purpose disabled inserted nearby putonnewline whatever left linked piece force new line separated blank wrapheads empty front every wraptails straight aimed producing promotional transactional campaigns equally without passing sometimes certain impractical ignore known leave option inverting list starts filter ed length necessary presence just switch application mode bad accidentally cause work combination listed respected excluded strips returns locations removals way extract indexes later operations npm package capitalises titles per chicago manual style source contain processing idea sets asterisk wildcard meaning paired then supplement been whitelisted finally invert them replacement third element coming maybe write custom conditions extra being ignored fix within under whenever wants call following contains internal feel free tap contents cb point callback interface action pushing user opposed suggest push final perform proposes proposedreturn going tells slash considering some whitspace replace minding speaking scientifically lexer scanerless parser simple language parsing ast trees processes doesn understand errors etc skips"},{"url":"/os/detergent/","postType":"package","title":"detergent","index":"purpose prepares text placing into html especially email template deletes invisible unicode characters like etx collapses whitespace trims prevents widow words recursively decodes entities encodes back preferring named over numeric ones switching which don render correctly across clients optionally strips with optional granular control tags exactly improves english grammar style converts dashes apostrophes curly quotes extra features are can skip encoding non latin language letters useful when deploying japanese chinese emails because otherwise everything would encoded detergent both xhtml friendly set way want your appear closing slash without that reduce code validator errors top api main function exported plain object under key see its below default options pass tweaked version returns same package json value particular copy got input above two arguments argument type obligatory description string yes clean arrangement second boolean true should try fix any broken missing replace last space paragraph breaking encode ascii chars typographically correct line breaks false put one removes inserting where necessary add slashes character example cjk alefbet ivri arabic abjad adds spaces after dots colons semicolons unless url convert three ellipsis ellipses will converted by stripped exception option ignore other turn tag removal completely here array list zero more strings each meaning name names replaced break must start something falsy callback additionally process between turning uppercase place wise choice most common scenario preparing pasted also shorter than output cleaned keys have values applicable given next generation web applications designed show only this saves user time conserves mental resources even need read labels they currently them lot use tool every day optimisation counts inspiration feature while visiting competitor application typograf checkboxes grouped groups hidden twice first sidebar visit page collapsed another overwhelming kangax minifier heavy descriptions tackles problem changing algorithm processes then makes note independently enabled changes result might look there nothing abc omitted from report custom settings setting others left unique complex program recognition touch word won within choose strip lets perform additional operations outside io lowercase functionality relies consider case skipped"},{"url":"/os/email-all-chars-within-ascii-cli/","postType":"package","title":"email-all-chars-within-ascii-cli","index":"quick take call one file just application will let choose from that folder multiple files once back top use installed whichever easier remember idea this cli app check does your html some other extension contains non ascii characters specifically are contents suitable bit encoding words within basic range first however only would short sighted invisible control anything below decimal point fall bad don want any except ht horizontal tab number lf new line cr carriage return also character del which technically falls might appear broken email consumption software practical re going library validate our templates part final qa theory should encoded have outside like etx practice depends server because esp end encode rogue trouble prepare worst deliver ready conforming spec beyond ps acceptable out api version works well gulp environment"},{"url":"/os/util-array-object-or-both/","postType":"package","title":"util-array-object-or-both","index":"purpose standardises input strings user given assumed array type object either string output back top api other words function which takes two arguments second one being optional marked by square brackets valid normalised version will returned error thrown argument obligatory description yes let users choose from variations both see above plain options below its lets customise message format following key default append front name variable are checking here example set misconfigures setting returns three possible values use going ast monkey json variables delete"},{"url":"/os/is-html-attribute-closing/","postType":"package","title":"is-html-attribute-closing","index":"purpose this program detects character given index string being closing attribute healthy code that normally double quotes aimed fixing seriously broken html missing mismatching swapped unencoded content part value driving which turn powers however finding trivial task back top api input other words function takes three arguments argument key type obligatory description yes zero more characters natural number opening quote ask evaluate does throw just returns anything wrong with false never throws because used inside programs idea proper algorithms will use care only about truthy case pass one crappy yields happy days consuming continue whatever dodgy journeys they have been making don errors output boolean erroneous yield well"},{"url":"/os/is-html-tag-opening/","postType":"package","title":"is-html-tag-opening","index":"purpose detect opening bracket tag otherwise might un encoded text back top api input other words function which takes two arguments argument key value type obligatory description string yes zero more characters natural number index supplied are any types error will thrown output returns boolean practice this program allows us tackle raw unencoded brackets html code drive linters"},{"url":"/os/update-versions/","postType":"package","title":"update-versions","index":"quick take update dependencies packages monorepo single repo latest per npm opinionated everybody two kinds workflows from point dependency updating roughly speaking there are groups program ecosystems sensitive updates front end web development general spa like react angular vue open source js pure programs monorepos such this aimed second group first devs especially typically use manually one by running test suite after each page setups prone breaking when updated notice how uses fixed deps caret gives instructions world fragile probably very suitable even humble website eleventy can make some postcss plugins have been lately wouldn build other side spectrum real stable wise last year our were maybe couple occasions that had actually patch something cli gung ho updater received requests implement wizard interface ask user which wrong tool those cases back top what does will iterate given path its sub paths process dev normal setup another package exists with name version set format value fetched using good idea lerna full owned where bump versions often effortlessly bad minor might break many things big complex deal part work properly prefixed hard enforce should force exception starts any listed both removed latter list common sense mention extra goes key called created normally cleans go left removes every processed"},{"url":"/os/detect-is-it-html-or-xhtml/","postType":"package","title":"detect-is-it-html-or-xhtml","index":"purpose function which detects does given string resemble xhtml html format affects closing slashes singleton tags back top api input other words takes one argument type this package will throw error missing completely return output value description identified your under hood algorithm following look recognised bob uncle here answer there messed beyond recognition scan see majority closed rare case when equal amount both unclosed lean are doctype"},{"url":"/os/edit-package-json/","postType":"package","title":"edit-package-json","index":"purpose edit json contents strings guarantee formatting will intact api uses object path notation set values any now only already existing paths powering cli back top there are two methods source val input argument type obligatory description string yes file desired must follow whatever what insert given can create new amend ones output amended returned repeat yet still baby state del delete testing besides regular unit tests went great lengths ensure this program works intended took monorepo then every single leaf package deleted ways editing directly using out plain stringify matched by way ended with asserts see test gitlab"},{"url":"/os/ast-get-values-by-key/","postType":"package","title":"ast-get-values-by-key","index":"purpose there are many ways work with ast huge nested trees objects arrays this program one possible two arguments triggers get mode returns array value path findings map that into desired values run again time putting third input argument set back top api given getter receive zero more plain keys where follows notation three setter copy original changed accordingly library does mutate any type obligatory description yes something upon string strings optional options object see below its"},{"url":"/os/is-media-descriptor/","postType":"package","title":"is-media-descriptor","index":"purpose are talking about called media descriptors older spec newer css mq level draft moment example part both html plan catch many errors possible typos unclosed brackets redundant characters untangle boolean logic anything that can happen queries selectors general this replacement validator linting tool will use conceptually very permissive doesn like something invalidates moves light needs opposite back top api input other words function which takes string options plain object argument type obligatory description extracted value attribute query without opening bracket optional go here calls below yield empty array bad don put please extract feed with returned key default integer reported indexes incremented by much falsy fine truthy natural number throw output program returns zero more objects each meaning error notation same except there quick basics just used marking either eslint uses singular emlint plural because ranges where marks add thing separately puts third element always arrays follow packages process them merging inverting resolving applying competition capable parsers out they oriented parsing correct code strictly pure validators built upon such really serious csstree checking tools should advanced slow likely scanerless ones find fix then syntax highlighting recognise fast re two different levels food chain currently sense"},{"url":"/os/string-overlap-one-on-another/","postType":"package","title":"string-overlap-one-on-another","index":"idea essence back top api input both methods same argument type obligatory description string yes which will put under over plain object optional options see its below separate table key value default positive negative integer zero instructs offset by this many characters right number left space character amount push pushes outside boundaries even there overlap gap formed out these single here are defaults one place edge cases algorithm following only two strings long other returned result empty non second overlaid first considering"},{"url":"/os/string-collapse-white-space/","postType":"package","title":"string-collapse-white-space","index":"api other words function which takes two input arguments second one being optional marked by square brackets argument type obligatory description string yes source work upon something falsy plain object options see below its back top output returns example following keys key name value where ranges were applied array more arrays containing from index characters deleted that would another nothing found put here are default boolean leading whitespace will just collapsed trailing every line trimmed except breaks cr lf also non breaking spaces set when trimming delete answer this setting affects above any can empty removed natural number zero allow many blank lines between content enabled only consecutive space character chunks chunk including single fed whatever return gets written resulting place case ever want copy whole program implements callback interface reported range tweak examples ping still elements replaced three learn about notation"},{"url":"/os/ast-get-object/","postType":"package","title":"ast-get-object","index":"purpose helper function extract plain objects by certain key value pairs two input arguments given replace those findings three back top api other words which takes argument type obligatory description whatever yes ast tree object array can deeply nested look arrray new values set even massive trees arrays doesn matter output depends get mode result will parent that hold asked same your with had replaced contents third replacement mind supply too few elements replacements this library won anything example reading querying parsed let contain true html fashion everything there are around each holds requested pair put into always wrapped just one finding above writing over task take find solution ps notice also keep like cartridge expect separate re ok case our"},{"url":"/os/object-all-values-equal-to/","postType":"package","title":"object-all-values-equal-to","index":"api other words function which takes two input arguments both obligatory back top argument type default description whatever yes ast tree object array can deeply nested hopefully contains some plain objects love will check does contain only every key please don set optional options its value boolean when within should present yield result this allow one more arrays here are defaults place case ever want copy tweak output working with data structures library would used certain piece json blank that placeholders everywhere now regards directly example customised placeholder instead checking against second former latter relevant dealing kinds count turn observe why need were fill missing keys reference fills according implementing feature switch let skip filling chosen they currently throughout whole also simple values equal something"},{"url":"/os/lect/","postType":"package","title":"lect","index":"quick take opinionated npm libraries maintenance cli app before migrated readme codsen com used replace chapters suitable automation installation instructions badges since migration nunjucks eleventy does job only generates placeholder auxiliary files sits monorepo root doesn need managing there one file anyway same with back top"},{"url":"/os/string-unfancy/","postType":"package","title":"string-unfancy","index":"idea convert typographically correct characters like curly quotes dashes their basic counterparts apostrophes hyphens opposite used ascii restricted places where encoding too unwieldy example image attribute values email templates back top api caveat input will function returns string gulp streams are using build can stream apply then within that replace instances with unfancied versions first need tap unfancy your main task probably towards end pipeline declare somewhere see above re running inline upon regex matched attributes lose html have fancy special converted simple letter equivalents use instead won even single dash different tool purpose"},{"url":"/os/html-crush/","postType":"package","title":"html-crush","index":"two modes only remove indentations opposite tabifier fully minify removing whitespace between tags back top features this program does parse input can html whatever mixed with equally errors broken incomplete quite mailchimp responsys exact target campaign monitor your fine side priority application also takes into consideration human friendliness its api npm library reports progress gui front end utilises allow responsive ui deliberately keep options count under considers white dark interfaces use modern toggle switches css hovers react any interaction giving possible javascript choices commonjs transpiled es untranspiled modules code umd dependencies baked published accessible via jsdelivr cdn developer source set which report line numbers actions they happen production builds strip logging course means easy come later first time debug exports plain object where main function key crush that why consume like exported description optional defaults per current string example other words arguments argument position call type obligatory yes zero more characters second see below supplied are types error will thrown output return find log data result corresponding ranges performed name value array range arrays notation would have made difference enabled disabled considering given default number when breaks what maximum length relevant boolean should answer enabling automatically enables comments there settings instructs non outlook removes including conditionals concerns both head inline style within attributes supply here called natural percentage complete moment values from finally percent squeeze reporting percentages start different go strings encountered option terminated setting active turned want disable either empty such accidentally introduce extra text take precautions minifying around one place case copy paste somewhere feature used web worker setup basically pass passes messages message final many sequence each meaning done far then full latter exactly happening our anything else than fed now how distinguish results random unlikely append secret being passed checks did came through"},{"url":"/os/str-indexes-of-plus/","postType":"package","title":"str-indexes-of-plus","index":"compared others method program returns index system based where first finding starts code point count array indexes each this package grapheme see article about unicode graphemes points back top api other words function which takes three arguments third one optional marked by square brackets output zero more numbers indicating character astral characters are counted long input argument type obligatory description string yes source search what natural number set searching will start from trivia roy asked ~shinnn right create alternative his he said ok"},{"url":"/os/object-flatten-all-arrays/","postType":"package","title":"object-flatten-all-arrays","index":"purpose recursively traverse deeply cloned input merge plain objects within each array back top api other words function which takes two arguments second one being optional marked by square brackets program returns same type thing given only with arrays flattened none are mutated their clones used instead argument obligatory description whatever yes ast tree object can nested hopefully contains some set options this see below keys key default boolean any contain strings flatten them empty turned what actually need most time"},{"url":"/os/ast-compare/","postType":"package","title":"ast-compare","index":"purpose compares data structures especially ast use compare two parsed html css trees their branches can anything will recursively traverse arrays too example powers delete object which also works default mode similar tap asserts option back top api other words function takes three input arguments third one being optional marked by square brackets returns boolean this library mutate argument type obligatory description array plain string yes superset larger thing set above smaller containing settings everything from matches within otherwise there mismatch something wrong with args options key any chunk whitespace tabs spaces line breaks match white space when want like instead output message explaining what didn cases important report positive answer always negative either sometimes just subset equal whole point comparison inform user exactly mismatching latter main return explanatory setting have anticipate else coming out rationale check does deeply nested objects strings some normally would deed positively empty against terrible hence plus accept adapt sources combinations that necessary support whatever differences partial comparisons source values value respectively lodash documentation ismatch bad are comparing doesn reported non"},{"url":"/os/string-range-expander/","postType":"package","title":"string-range-expander","index":"purpose this program used manage whitespace string index selections let say want delete certain range maybe there around extends ranges needed back top api expand opts other words function which takes single input argument key value type obligatory description plain object yes options see below its arguments are supplied have any types error will optional default empty reference number natural from should backwards characters left side given tigger tight crop concatenated into one chunk skip they were right boolean strings can only using extended until reaches first non character eol prevent accidental concatenation by inserting space situations here place copy paste somewhere output array two indexes new example"},{"url":"/os/string-fix-broken-named-entities/","postType":"package","title":"string-fix-broken-named-entities","index":"purpose this program detects fixes broken named html entities like algorithm levenshtein distance smaller match by longer allow practice means can catch errors mistyped also works healthy catcher are fed one callback another there decoding function aware numeric well back top api input required imported two arguments argument type obligatory description string yes hopefully code plain object optional options see below its example key value default boolean fixed values normally put encoded set get raw characters instead which gives granular control output here every encountered entity will passed dedicated chapter used web worker setups pass gets called once each natural number meaning percentage work done far place array zero more arrays ranges what composable amendment instructions they containing from indexes range instruction delete would otherwise fall into replace with that note pieces deleted replaced using character four further processed other libraries cropping sorting merging straight notation those decoded only want full consider filtering library right after first filter then same skipping already recorded ent decode merge index above however need slightly different format issue titles via allows change concept receive ingredients under various keys whatever return pushed results result application about push call your findings neatly solve detailed their types name rulename suitable linters entityname just without ampersand semicolon case sensitive rangefrom shows where rangeto rangevalencoded fix should nothing insert rangevaldecoded relation even though might seem when does matter because serve both have non breaking spaces semicolons since give user option choose between come ways requested sticking missing pinged either progress package showing hard show minimal least how pinging side npm"},{"url":"/os/object-delete-key/","postType":"package","title":"object-delete-key","index":"deleting three modes delete pairs found any nested plain objects where equals equal certain thing doesn matter this library accepts anything input including parsed html which deeply arrays strings can feed into traversable will traversed searched your want that contain pair check out ast object back top api other words function takes two arguments both obligatory are mutated package clones them first before using argument type description whatever yes tree array options see its key arrangement below default string find value massively boolean true should empty carcases left after deletion setting from only set one values keys case means element meant used least must present accepted interpreted longer than zero characters insensitively above throw error relieve users having documentation output returns with requested removed"},{"url":"/os/json-variables/","postType":"package","title":"json-variables","index":"purpose lets dry plain objects json files contents any special marker value can reference other values by path result there only one each even though are used many places that concept back top features notation arrays use dots too instead keys dump data nearby customiseable naming pattern detects existing heads tails won wrap twice battle tested production manage email templates api words main export function which takes two input arguments optional object square brackets above mean argument type obligatory description parsed typically yes source work upon containing settings options key default string how want mark beginning variable ending definitely don wrapped boolean put separate dedicated named similarly where variables placed your besides those will have different somehow suggest appending name tell here what optionally resolved with left called please right array strings surrounded matched given wildcards note zero more characters make sure does contain these already prevent double triple multiple wrapping global flip switch turn completely everywhere exactly throw mismatched error very first moment merged into turns whole its permanently nothing else matters when mix booleans empty just resolving intact this setting relevant mixing cases resolve matter encountered retained get renderer happens set normally program throws prefer missing putting resolves defaults place output returns same thing passed know allows valid types inside file example pass outermost container return examples care our further check declare way own also new pair using bake some java fine ensure closed loop otherwise ok deeper levels within dot like containers wise looked higher level might appear clunky saving time scrolling out look clean arrangement hell convoluted nasty status therefore mashed together starts letter end being after sorting observe better isn think rely customise call hand via force current query ignores ignore supplying their patterns challenge instance another both solution alternative always non them anything processed practice essential feature working structures need adapted front development preview build following shows html sprinkled nunjucks members jinja templating languages curly braces template dev everything looks basically redirects pulls title text prod version minimal overwriting keep process instructs baked ready far good add exist again language would something content intention now notice because statement second solve keeping instruct skip often inactive modules marked they every false true mixes"},{"url":"/os/bitbucket-slug/","postType":"package","title":"bitbucket-slug","index":"idea bitbucket readme file headings are automatically linked with anchors this library generates those anchor links just case want generate table contents programmatically any given backwards engineered slug generation algorithm appears strip punctuation emoji non letter characters like hashes which mean markdown single space that follows them replace each chunk spaces hyphen deburr latin letters cyrillic hiragana katakana etc there rule two slugs can same function url starts append first repeated onwards only dependencies ent decode entities lodash convert basic back top api input string output empty will returned competition whoever wonders slugify npm won match heading peculiarities differ another hand aiming spec close possible our unit tests pinning against rendered html"},{"url":"/os/array-pull-all-with-glob/","postType":"package","title":"array-pull-all-with-glob","index":"purpose this program removes strings from array they match glob pattern like lodash pullall except with top example use email comb whitelist css class id names back api other words function which takes three input arguments third one being optional marked by square brackets argument type obligatory description yes source zero more string single removed plain object options see its below way none are mutated that checked unit tests group key default boolean comparisons case sensitive answer can override using here defaults place copying when unused also passed value output elements"},{"url":"/os/easy-replace/","postType":"package","title":"easy-replace","index":"purpose alternative js regexes back top api other words string out function with three input arguments see them below argument type obligatory description yes original plain object settings replace findings this missing library runs delete only mode won just options key array strings equivalent regex negative lookbehind these must present left plus any maybe order counted found contents are replaced deleted positive side together don fret keyword look right lookahead higher each mentioned above can set boolean optionally case insensitive same thing flag output things examples simple example replacement recipe instances solution using setting every want ignore via maybes optional surrounding well there characters count part one by way notice how values arrays doesn accept create loop from outside then call many times search multiple will cover more surroundings cases match something followed else ones that have narrow down amount replacements preceded space another their occurencies character those front our sometimes like disregard curly braces make visible here they already add spaces before closing slashes tags where exist real life scenario semicolon ampersand random letter capitalisation"},{"url":"/licences/","postType":"page","title":"Licences","index":"external link icon re using modified version wikipedia which public domain loader party parrots cultofthepartyparrot com creative commons attribution sharealike international license eleventy starter templates borrowed some template structures from phil hawksworth eleventyone got awesome data wiring mit licence mattia astorino xity proper folder structure parcel other dependencies ty plugin inclusive language rss syntaxhighlight @babel core preset env @octokit @quasibit sitemap @tbranyen jsdom array shuffle axios countup js cross cssnano advanced delay cli markdown shortcode eslint config airbnb base prettier import unsanitized row num ha ours fuse gray matter html minifier jest linkinator lodash camelcase clonedeep luxon escape anchor container fence implicit figures kbd matcher npm run number words map pacote bundler parse github url postcss variables color mix comment easy mixins reporter simple vars precss ranges apply invert regex replace rimraf sass slugify string strip unfancy title uslug what input write file atomic"},{"url":"/articles/string-strip-html-v.5-and-lessons-learned/","postType":"article","title":"`string-strip-html` v.5 and Lessons Learned","index":"exported function string out api awesome because simple problem happens later when want add more output example log with time spent alternative like locations indexes from package json could send message past ourselves would always return plain object never chummy keep switch between different outputs using options flags did previous versions today released end chumminess returned now why change what upon user request can everything removed need choose get containing cleaned considering gathered ranges used produce tag spotted html tags ignoring whitelist blacklist filtered plus some statistics new additions reports index detected syntax highlighting which contains whitespace corrections are meant applied onto handy perf investigations gui web apps migration instructions tldr grab key before destructure they re while takes into consideration this way ask program strip only then actually their even control over result use"},{"url":"/articles/evolution-of-our-npm-packages-from-a-readme-perspective/","postType":"article","title":"Evolution of Our npm Packages, From a README Perspective","index":"our npm package count grows readme automation becomes more issue installation instructions badges contribution guidelines can automatically generated many other chapters here story from perspective beginning first had handful packages folder with few subfolders didn manage anything each its own manually written md newer edit date nicer were experimenting adding features like there lots copy pasting risk that old bits could remain end published new level later discovered cli helper np mr sorhus idea genius hack away then release time comes trigger wipes installs fresh runs tests pass asks next version releases pushes git remote let loop by this around often releasing manual per thought what over folders call inside one did still though moment popped mind actually generate replace specific put script run created only config root plus have their settings approach different schlinkert which keeps contents separate file renders into added automating maintenance auxiliary files even example glance rollup monorepo conceptually lerna does three things us bootstrap dependencies dedupe lift them while integrating when fill changelog completely bump json once versions bumped re king calling won publish without will get excellent async runner pretty sure using strange ways solve technical challenges namely cohesion within ecosystem words code feature how check break down stream dependency wise tedious either symlink paste builds another restore they automated think bahmutov dont boundaries duplication sheer gluttony standalone again calculated gigabytes wiped downloaded laptop being much unusable burning fans duration whole hour writing weighing mb tiny size standards record warts too couldn use wrote linker nor go far means also updater deserves post through gitlab ci continuous integration terminal session spun server datacenters bunch commands repo sits internal rabbit hole pump build artefacts everything starting jsons internets rd person set are committed pushed during christmas couple spare weeks hand decided onto went successfully although accidental semver bumps because initial misconfiguration see current don data potential security issues secrets leak public save referencing user fantastic ports publishing servers day getting email pipeline failed got theoretically development done opportunistically bothering test suite locally happens breaking anyway moving very choice people share configs talk about setups assemble scratch took nail remember lindesay promise outcomes moved website indieweb principles your itches tools yourself selfdogfood document stuff open source ux design important than protocols visible humans machines second platform agnostic platforms plurality monoculture longevity fun owned makes sense updates warrant any programs repositories trackers allows treating documentation amends properly templates meaningful checks separating concerns outside raise tickets help update affect saas companies out quality assess suitable corporate shocked find excessive deemed sign low oops effort seeking perfection apparently harmful argument port provider general outdo github bitbucket easily proper dark mode auto full control images caching complete markdown rendering know eleventy plugins available walled gardens receive best possible treatment heading anchors toc smooth scroll anybody interactive charts playgrounds embedded iframes runkit mention usual css jsbin codepen improved page layouts cross selling linking hell articles tags banners wish owning hosting terms gives opportunities conclusion host program form codsen com keeping bare minimal exist contain link homepage future shuffle further seek deno service land treat equally everywhere final alternative straight cloudflare cdn bypassing contribute preventing fate consume dealing microsoft"},{"url":"/articles/our-dark-mode-setup/","postType":"article","title":"Our Dark Mode Setup","index":"conceptually dark light mode website driven by buttons ui whichever user picks attribute with that value gets set tag also persist browser local storage automatic setting listens system via manual modes css pretty much here mixin use these days postcss plugins can substitute sass dropping simplifies tooling there one part less setup pun intended process mixins variables like three auto are tackled this simple @include darktheme takes define alternative styling useful reference article although don native gist same instructions explain theme switching thoroughly against custom properties have their they exquisite solution when design sets colours swapped arguments favor style wrote parser ingest into nunjucks global scope allow us vars inline html will require another program dollar notation six characters type instead very relevant supported ie need extra measures example other hand rendered classic web development land decision make email while readily available back day data often put onto using attributes rather than more semantic bad habit fear tags"},{"url":"/articles/our-cache-busting-setup-on-eleventy/","postType":"article","title":"Our Cache Busting Setup on Eleventy","index":"cache busting necessary because browsers static resources namely css js files update website visitors might see their latest versions theory implementing web workers should solve problem there are eleventy plugins that decided enable pwa setup until test properly here how bust old school way nunjucks parcel started this xity boilerplate gave headstart providing decent pipeline postcss using removed plugin ways essence generate file based unix epoch timestamp pipe assets subfolder named also use when templating asset paths need reference inside any from will then additional step run find replace script after build completes read proper explanation examples conceptually architecture addressability principle tells url identifies one only resource leonard richardson mike amundsen sam ruby restful apis given visitor browser caches example those distinguished another by two clones same different folders still flows takes turn into new change its why achieved changing can done three add unique characters name put uniquely folder parameters least works pre world third option seems easiest unreliable parameter get discarded anywhere journey sorry buster leaves us with options versus approach easier just sub during liner would involve either producing timestamped hashed names they re created possible come renaming them later ingestion tricky considering won event hook released yet time writing runs both complicated layers front hash vs consideration what random value easy terminal content each deployment cause treated even haven changed since last release hashes md contents drawback have per case length issue timestamps ten long initial went simplified huge does many things first outputs current root project probably previous gets overwritten contains our been written processing baking dependencies rendering mixins etc normal rendered located fires reads second copies where now placed html templates know write correct global data returns plain object which consume like deconstructed let go through npm piece ingredients scripts package json sequentially parallelly make work windows fair everybody afford mac triggered builds development version watches changes destructured calls following these commands above delete diy solution command configured configs doesn aware parallel writes being relevant some search worker unblock thread start kill keypress field simply speaking running pet separate cpu messaging between catch main needs give seconds text node scripting best people prefer bash perl few watch kinds marked cli flags never end thus block further chained append something trigger printed valid watching browsersync mode flag others other reasons chain watcher ran rule apply processes covered dev prod production similar except standalone renames wonder moment sees anything else than absolute process wrong means ignore force conclusion mvp minimal viable product continue improving source code open sourced feel free fork play around learn doing reading alone suffice"},{"url":"/articles/eslint-uses-similar-thing-to-ranges/","postType":"article","title":"ESLint Uses Similar Thing to Ranges","index":"well sort check eslint api will return key string indexes are same they also placed array only difference explicitly tells what insert using separate marked finding like this ranges would mark shorter very similar"},{"url":"/author/royrevelt/","postType":"page","title":"Roy Revelt","index":"roy revelt ma msc director codsen ltd well rounded software engineer mainly working with javascript front end he specialises enterprise level email versed modern js ecosystem web development ssr react redux rtl styled components storybook etc his open source programs are downloaded million times per month september data bsc math teacher diploma vilnius informatics thesis project php postproduction york python before establishing worked jigsaw uk leading purveyors apple esp responsys now part oracle agency side british citizen since back top"},{"url":"/articles/why-object-path-package-is-great/","postType":"article","title":"Why `object-path` package is great","index":"getter setter nested arrays plain objects here use directly also align our api why first reason allows get set values by path matter how deep any levels destination are missing before optional chaining tried access non existing keys object deeper than one absent level error would thrown while can substitute method other methods such don have native js equivalent that second does what solutions fun part when deal with keeps same notation did this way addressing array using dot like instead brackets different paradigm example advantage programmatically assemble getting vanilla bracket easy third both paths being joined simplify assembly operations result quite few packages"},{"url":"/os/ranges-merge/examples/","postType":"package","title":"","index":"back examples table contents quick take top"},{"url":"/examples-help/","postType":"page","title":"How to Try Code Examples","index":"want tinker with examples have many options how run code time writing native node es modules support still flaky using plain repl call like would work use which via flag this monorepo then into package folder can execute each example file there are errors nothing should happen asserts succeeded program npm script calls test runner gives some ui terminal get feedback testing outcome cloned codesandbox copy paste sandbox manually adding imported dependencies could runkit doesn replace imports commonjs equivalents"},{"url":"/articles/automated-vercel-redirect-maintenance-on-eleventy/","postType":"article","title":"Automated Vercel Redirect Maintenance on Eleventy","index":"vercel our static website hosting service makes easy set page redirects can have controlled from single json file many things go wrong that stakes are quite high starting with seo any redirect mistakes hard spot here automated checking setup some background first web help cases example salvage traffic after changing url instance renaming blog post title defences against mistyped got whitespace spelt without hyphen different packages cover gaps paths exists does there two ways perform client side server done via tags optimal because implemented when people will land respond code which ok then them correct browser issue get request new hopefully another good proper way cause visitor lands location site generator choice eleventy apply front end solution config placed root folder looks like this going check following read sort overwrite sorted by key validate ensure exist otherwise what point re redirecting real schema should validated least rudimentary make sure only three keys each object equal covered validations same thing count less than line limit too such irrelevant won long relative domain even substring anywhere implementation script relies having access production build files don publish risk google bot crawling errors right using npm scripts intending run checks gitlab ci fail found functionality could part cli validation would need information where triggered back square one escape though length misspelt create internal node during builds how put shebang top permissions wire package call called repl just calling program terminal executing js pass nothing happens error occurs thrown also want happen pipelines explain eight writing due sheer amount plus likely change over time head see current live validator they public open source"},{"url":"/os/ranges-offset/","postType":"package","title":"ranges-offset","index":"api input argument type obligatory description null array one more arrays provide ranges invert have sorted merged integer number this will added each index every range output were passed same returned else offset value inputs are mutated back top purpose example when working parsed tokens chunk string know starts zero return based result receiving parties need increment by catch empty can used hence library"}];

onmessage = (e) => {
  // console.log(
  //   `016 search-worker.js: received ${JSON.stringify(e.data, null, 4)}`
  // );

  // 2. Set up the Fuse instance
  const fuse = new Fuse(searchIndex, {
    // isCaseSensitive: false,
    includeScore: false,
    // shouldSort: true,
    // includeMatches: true,
    findAllMatches: false,
    // minMatchCharLength: 1,
    // location: 0,
    threshold: 0.2,
    // distance: 1000,
    // useExtendedSearch: false,
    ignoreLocation: true,
    // ignoreFieldNorm: false,
    keys: ["title", "index"],
  });

  const res = fuse.search(e.data);
  // console.log(
  //   `038 search-worker.js: ${`\u001b[${33}m${`res`}\u001b[${39}m`} = ${JSON.stringify(
  //     res,
  //     null,
  //     4
  //   )}`
  // );
  postMessage(res);
};

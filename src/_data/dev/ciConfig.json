"version: v1.0\nname: CODSEN\nagent:\n  machine:\n    type: e1-standard-2\n    os_image: ubuntu1804\nexecution_time_limit:\n  hours: 2\nblocks:\n  - name: Publish the packages\n    task:\n      secrets:\n        - name: GIT setup\n        - name: NPM setup\n        - name: SSH_PRIVATE_KEY\n      prologue:\n        commands:\n          - nvm install node\n          - node --version\n          - npm --version\n          # Correct premissions since they are too open by default:\n          - chmod 0600 ~/.ssh/id_rsa\n          # Add the key to the ssh agent:\n          - ssh-add ~/.ssh/id_rsa\n          - checkout\n      jobs:\n        - name: Publish\n          commands:\n            - git config --global user.email \"${USER_EMAIL}\"\n            - git config --global user.name \"${YOUR_NAME_SURNAME}\"\n            - git config user.name\n            - git remote -v\n            - npm set unsafe-perm true -g\n            - npm set //registry.npmjs.org/:_authToken ${NPM_TOKEN} -g\n            - npm set username ${NPM_USERNAME} -g\n            - npm set email ${NPM_EMAIL} -g\n            - npm whoami\n            - pwd\n            - ls\n            - npm run fresh\n            - npm run info\n            - npm run readme:generate\n            - git status\n            - git add packages\n            - git add stats\n            - git add README.md\n            - \"git add package-lock.json || echo 'no package-lock.json'\"\n            - \"git diff-index --quiet HEAD || git commit -m 'chore: automated build tasks [skip ci]' --no-verify\"\n            # run lerna version with all extras:\n            - npm run pub:vers\n            # now build again, because those bumped versions need to be written into header comment blocks:\n            - npm run build:just\n            - git status\n            - git add packages\n            - git add README.md\n            - \"git commit -m 'chore: automated build tasks [skip ci]' --no-verify\"\n            # publish to npm\n            - npm run republish\n            # push repo with all artifacts to git remote\n            - git push\n            # reset jsdelivr caches\n            - curl https://purge.jsdelivr.net/npm/detergent/dist/detergent.umd.js || echo 'detergent unreachable on jsdelivr'\n            - curl https://purge.jsdelivr.net/npm/html-crush/dist/html-crush.umd.js || echo 'html-crush unreachable on jsdelivr'\n            - curl https://purge.jsdelivr.net/npm/email-comb/dist/email-comb.umd.js || echo 'email-comb unreachable on jsdelivr'\n            - curl https://purge.jsdelivr.net/npm/string-strip-html/dist/string-strip-html.umd.js || echo 'string-strip-html unreachable on jsdelivr'\n            - curl https://purge.jsdelivr.net/npm/stristri/dist/stristri.umd.js || echo 'stristri unreachable on jsdelivr'\n            - curl https://purge.jsdelivr.net/npm/emlint/dist/emlint.umd.js || echo 'emlint unreachable on jsdelivr'\n            - curl https://purge.jsdelivr.net/npm/codsen-tokenizer/dist/codsen-tokenizer.umd.js || echo 'codsen-tokenizer unreachable on jsdelivr'\n            - curl https://purge.jsdelivr.net/npm/codsen-parser/dist/codsen-parser.umd.js || echo 'codsen-parser unreachable on jsdelivr'\n            - curl https://purge.jsdelivr.net/npm/json-variables/dist/json-variables.umd.js || echo 'json-variables unreachable on jsdelivr'\n"